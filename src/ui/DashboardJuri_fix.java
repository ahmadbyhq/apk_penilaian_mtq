/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;
import controller.*;
import java.awt.Color;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import model.*;
import auth.*;

/**
 *
 * @author Alief
 */
public class DashboardJuri_fix extends javax.swing.JFrame {
    private StatistikController statistikController;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(DashboardJuri_fix.class.getName());

    /**
     * Creates new form DashboardJuri_fix
     */
    public DashboardJuri_fix() {
        initComponents();
        statistikController = new StatistikController();
        jComboBoxPilihPeserta.setModel(new DefaultComboBoxModel<>());
        jComboBoxPilihAspek.setModel(new DefaultComboBoxModel<>());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgDashboardPanit = new javax.swing.JPanel();
        jSplitPanePanitia = new javax.swing.JSplitPane();
        leftPanelside = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerTxt = new javax.swing.JLabel();
        navbarBox = new javax.swing.JPanel();
        menuNavbar = new javax.swing.JPanel();
        PesertaStatistik = new javax.swing.JPanel();
        statistikPeserta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        penilaianPeserta = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        logoutTxt = new javax.swing.JLabel();
        kontenPanel = new javax.swing.JPanel();
        rightpanelStatistik = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        headerNavbar = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        boxPerkembanganpeserta = new javax.swing.JPanel();
        boxPaneltabel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelStatistikLomba = new javax.swing.JTable();
        boxCard = new javax.swing.JPanel();
        cardTotalPeserta = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        totalPesertatxt = new javax.swing.JLabel();
        cardTotalJuri = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        totalJuritxt = new javax.swing.JLabel();
        cardTotalLomba = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        totalLombatxt = new javax.swing.JLabel();
        boxRefresh = new javax.swing.JPanel();
        refreshBtnStatistik1 = new javax.swing.JButton();
        rightPanelPenilaian = new javax.swing.JPanel();
        headerNavbar1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        boxCRUDjuri = new javax.swing.JPanel();
        boxtabelNilai = new javax.swing.JPanel();
        scrollTabelPenilaianPeserta = new javax.swing.JScrollPane();
        tabelPenilaianPeserta = new javax.swing.JTable();
        boxActJuri = new javax.swing.JPanel();
        boxFieldJuri = new javax.swing.JPanel();
        inputNilaiLabel = new javax.swing.JLabel();
        fieldBeriNilai = new javax.swing.JTextField();
        boxBtnAddnilai = new javax.swing.JPanel();
        beriNilaiBtn = new javax.swing.JButton();
        editNilaiPeserta = new javax.swing.JButton();
        boxSouthFilter = new javax.swing.JPanel();
        jComboBoxPilihLomba = new javax.swing.JComboBox<>();
        jComboBoxPilihPeserta = new javax.swing.JComboBox<>();
        jComboBoxPilihAspek = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard Juri");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bgDashboardPanit.setLayout(new java.awt.BorderLayout());

        jSplitPanePanitia.setDividerLocation(250);
        jSplitPanePanitia.setDividerSize(0);
        jSplitPanePanitia.setPreferredSize(new java.awt.Dimension(1100, 475));

        leftPanelside.setBackground(new java.awt.Color(0, 102, 0));
        leftPanelside.setMinimumSize(new java.awt.Dimension(250, 475));
        leftPanelside.setLayout(new java.awt.BorderLayout());

        headerPanel.setBackground(new java.awt.Color(0, 85, 15));
        headerPanel.setMinimumSize(new java.awt.Dimension(250, 50));
        headerPanel.setPreferredSize(new java.awt.Dimension(250, 50));
        headerPanel.setLayout(new java.awt.BorderLayout());

        headerTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        headerTxt.setForeground(new java.awt.Color(255, 255, 255));
        headerTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerTxt.setText("Dashboard Juri");
        headerPanel.add(headerTxt, java.awt.BorderLayout.CENTER);

        leftPanelside.add(headerPanel, java.awt.BorderLayout.NORTH);

        navbarBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 1, 1, 1));
        navbarBox.setOpaque(false);
        navbarBox.setLayout(new java.awt.BorderLayout());

        menuNavbar.setMinimumSize(new java.awt.Dimension(250, 350));
        menuNavbar.setOpaque(false);
        menuNavbar.setPreferredSize(new java.awt.Dimension(250, 350));
        menuNavbar.setLayout(new java.awt.GridBagLayout());

        PesertaStatistik.setBackground(new java.awt.Color(0, 102, 0));
        PesertaStatistik.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PesertaStatistikMousePressed(evt);
            }
        });
        PesertaStatistik.setLayout(new java.awt.GridBagLayout());

        statistikPeserta.setBackground(new java.awt.Color(0, 76, 6));
        statistikPeserta.setMinimumSize(new java.awt.Dimension(250, 50));
        statistikPeserta.setPreferredSize(new java.awt.Dimension(250, 50));
        statistikPeserta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statistikPesertaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statistikPesertaMousePressed(evt);
            }
        });
        statistikPeserta.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/monitoring_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel1.setText("Statistik Peserta");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIconTextGap(16);
        jLabel1.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel1.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel1.setPreferredSize(new java.awt.Dimension(225, 30));
        statistikPeserta.add(jLabel1, new java.awt.GridBagConstraints());

        PesertaStatistik.add(statistikPeserta, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        menuNavbar.add(PesertaStatistik, gridBagConstraints);

        penilaianPeserta.setBackground(new java.awt.Color(0, 102, 0));
        penilaianPeserta.setMinimumSize(new java.awt.Dimension(250, 50));
        penilaianPeserta.setPreferredSize(new java.awt.Dimension(250, 50));
        penilaianPeserta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                penilaianPesertaMousePressed(evt);
            }
        });
        penilaianPeserta.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/list_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel7.setText("Penilaian Peserta");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel7.setIconTextGap(16);
        jLabel7.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel7.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel7.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        penilaianPeserta.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        menuNavbar.add(penilaianPeserta, gridBagConstraints);

        navbarBox.add(menuNavbar, java.awt.BorderLayout.NORTH);

        leftPanelside.add(navbarBox, java.awt.BorderLayout.CENTER);

        logoutPanel.setBackground(new java.awt.Color(0, 85, 6));
        logoutPanel.setMinimumSize(new java.awt.Dimension(250, 50));
        logoutPanel.setPreferredSize(new java.awt.Dimension(250, 50));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutPanelMousePressed(evt);
            }
        });
        logoutPanel.setLayout(new java.awt.GridBagLayout());

        logoutTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutTxt.setForeground(new java.awt.Color(255, 255, 255));
        logoutTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logout_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        logoutTxt.setText("Logout");
        logoutTxt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        logoutTxt.setIconTextGap(16);
        logoutTxt.setMaximumSize(new java.awt.Dimension(225, 30));
        logoutTxt.setMinimumSize(new java.awt.Dimension(225, 30));
        logoutTxt.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        logoutPanel.add(logoutTxt, gridBagConstraints);

        leftPanelside.add(logoutPanel, java.awt.BorderLayout.SOUTH);

        jSplitPanePanitia.setLeftComponent(leftPanelside);

        kontenPanel.setPreferredSize(new java.awt.Dimension(850, 475));
        kontenPanel.setLayout(new java.awt.CardLayout());

        rightpanelStatistik.setBackground(new java.awt.Color(255, 255, 255));
        rightpanelStatistik.setMinimumSize(new java.awt.Dimension(850, 475));
        rightpanelStatistik.setLayout(new java.awt.BorderLayout());

        topPanel.setOpaque(false);
        topPanel.setLayout(new java.awt.BorderLayout());

        headerNavbar.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Statistik Peserta");
        headerNavbar.add(jLabel6, java.awt.BorderLayout.CENTER);

        topPanel.add(headerNavbar, java.awt.BorderLayout.NORTH);

        rightpanelStatistik.add(topPanel, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta.setOpaque(false);
        boxPerkembanganpeserta.setLayout(new java.awt.BorderLayout());

        boxPaneltabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 20, 20));
        boxPaneltabel.setOpaque(false);
        boxPaneltabel.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(825, 275));

        tabelStatistikLomba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nama Lomba", "Total Peserta", "Kuota"
            }
        ));
        tabelStatistikLomba.setMinimumSize(new java.awt.Dimension(825, 275));
        tabelStatistikLomba.setRowHeight(25);
        tabelStatistikLomba.setShowGrid(true);
        jScrollPane3.setViewportView(tabelStatistikLomba);

        boxPaneltabel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        boxPerkembanganpeserta.add(boxPaneltabel, java.awt.BorderLayout.CENTER);

        boxCard.setMinimumSize(new java.awt.Dimension(850, 125));
        boxCard.setOpaque(false);
        boxCard.setPreferredSize(new java.awt.Dimension(850, 125));
        boxCard.setLayout(new java.awt.GridBagLayout());

        cardTotalPeserta.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalPeserta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cardTotalPeserta.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalPeserta.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalPeserta.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(0, 76, 6));
        jPanel8.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel8.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Total Peserta");
        jPanel8.add(jLabel8, java.awt.BorderLayout.CENTER);

        cardTotalPeserta.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel10.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.BorderLayout());
        cardTotalPeserta.add(jPanel10, java.awt.BorderLayout.SOUTH);

        totalPesertatxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalPesertatxt.setForeground(new java.awt.Color(255, 255, 255));
        totalPesertatxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalPesertatxt.setText("100");
        cardTotalPeserta.add(totalPesertatxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        boxCard.add(cardTotalPeserta, gridBagConstraints);

        cardTotalJuri.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalJuri.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalJuri.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalJuri.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(0, 76, 6));
        jPanel12.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel12.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Total Juri");
        jPanel12.add(jLabel9, java.awt.BorderLayout.CENTER);

        cardTotalJuri.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel13.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.BorderLayout());
        cardTotalJuri.add(jPanel13, java.awt.BorderLayout.SOUTH);

        totalJuritxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalJuritxt.setForeground(new java.awt.Color(255, 255, 255));
        totalJuritxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalJuritxt.setText("100");
        cardTotalJuri.add(totalJuritxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        boxCard.add(cardTotalJuri, gridBagConstraints);

        cardTotalLomba.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalLomba.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalLomba.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalLomba.setLayout(new java.awt.BorderLayout());

        jPanel14.setBackground(new java.awt.Color(0, 76, 6));
        jPanel14.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel14.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel14.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Total Lomba");
        jPanel14.add(jLabel11, java.awt.BorderLayout.CENTER);

        cardTotalLomba.add(jPanel14, java.awt.BorderLayout.NORTH);

        jPanel15.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel15.setOpaque(false);
        jPanel15.setLayout(new java.awt.BorderLayout());
        cardTotalLomba.add(jPanel15, java.awt.BorderLayout.SOUTH);

        totalLombatxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalLombatxt.setForeground(new java.awt.Color(255, 255, 255));
        totalLombatxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLombatxt.setText("100");
        cardTotalLomba.add(totalLombatxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        boxCard.add(cardTotalLomba, gridBagConstraints);

        boxRefresh.setMinimumSize(new java.awt.Dimension(100, 100));
        boxRefresh.setOpaque(false);
        boxRefresh.setLayout(new java.awt.CardLayout());

        refreshBtnStatistik1.setBackground(new java.awt.Color(0, 102, 0));
        refreshBtnStatistik1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        refreshBtnStatistik1.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtnStatistik1.setText("Refresh");
        refreshBtnStatistik1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshBtnStatistik1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnStatistik1ActionPerformed(evt);
            }
        });
        boxRefresh.add(refreshBtnStatistik1, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        boxCard.add(boxRefresh, gridBagConstraints);

        boxPerkembanganpeserta.add(boxCard, java.awt.BorderLayout.NORTH);

        rightpanelStatistik.add(boxPerkembanganpeserta, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightpanelStatistik, "card2");

        rightPanelPenilaian.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelPenilaian.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelPenilaian.setLayout(new java.awt.BorderLayout());

        headerNavbar1.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar1.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar1.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar1.setLayout(new java.awt.BorderLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Penilaian Peserta");
        headerNavbar1.add(jLabel14, java.awt.BorderLayout.CENTER);

        rightPanelPenilaian.add(headerNavbar1, java.awt.BorderLayout.NORTH);

        boxCRUDjuri.setMinimumSize(new java.awt.Dimension(825, 275));
        boxCRUDjuri.setOpaque(false);
        boxCRUDjuri.setPreferredSize(new java.awt.Dimension(825, 275));
        boxCRUDjuri.setLayout(new java.awt.BorderLayout());

        boxtabelNilai.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 15, 0, 15));
        boxtabelNilai.setOpaque(false);
        boxtabelNilai.setLayout(new java.awt.BorderLayout());

        scrollTabelPenilaianPeserta.setMinimumSize(null);

        tabelPenilaianPeserta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Nama Peserta", "Asal", "Lomba", "Aspek Penilaian", "Skor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPenilaianPeserta.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        tabelPenilaianPeserta.setName(""); // NOI18N
        tabelPenilaianPeserta.setRowHeight(25);
        tabelPenilaianPeserta.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelPenilaianPeserta.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelPenilaianPeserta.setShowGrid(true);
        scrollTabelPenilaianPeserta.setViewportView(tabelPenilaianPeserta);
        if (tabelPenilaianPeserta.getColumnModel().getColumnCount() > 0) {
            tabelPenilaianPeserta.getColumnModel().getColumn(0).setMinWidth(40);
            tabelPenilaianPeserta.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelPenilaianPeserta.getColumnModel().getColumn(5).setMinWidth(75);
            tabelPenilaianPeserta.getColumnModel().getColumn(5).setMaxWidth(75);
        }

        boxtabelNilai.add(scrollTabelPenilaianPeserta, java.awt.BorderLayout.CENTER);

        boxCRUDjuri.add(boxtabelNilai, java.awt.BorderLayout.CENTER);

        boxActJuri.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        boxActJuri.setMinimumSize(new java.awt.Dimension(794, 89));
        boxActJuri.setOpaque(false);
        boxActJuri.setPreferredSize(new java.awt.Dimension(794, 89));
        boxActJuri.setLayout(new java.awt.BorderLayout());

        boxFieldJuri.setBackground(new java.awt.Color(204, 204, 204));
        boxFieldJuri.setMinimumSize(new java.awt.Dimension(50, 125));
        boxFieldJuri.setOpaque(false);
        boxFieldJuri.setPreferredSize(new java.awt.Dimension(50, 125));
        boxFieldJuri.setLayout(new java.awt.GridBagLayout());

        inputNilaiLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        inputNilaiLabel.setForeground(new java.awt.Color(0, 102, 0));
        inputNilaiLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inputNilaiLabel.setText("Masukkan nilai");
        inputNilaiLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxFieldJuri.add(inputNilaiLabel, gridBagConstraints);

        fieldBeriNilai.setBackground(new java.awt.Color(0, 102, 0));
        fieldBeriNilai.setForeground(new java.awt.Color(255, 255, 255));
        fieldBeriNilai.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldBeriNilai.setMinimumSize(new java.awt.Dimension(200, 35));
        fieldBeriNilai.setPreferredSize(new java.awt.Dimension(200, 35));
        fieldBeriNilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldBeriNilaiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        boxFieldJuri.add(fieldBeriNilai, gridBagConstraints);

        boxBtnAddnilai.setMinimumSize(new java.awt.Dimension(150, 30));
        boxBtnAddnilai.setPreferredSize(new java.awt.Dimension(150, 30));
        boxBtnAddnilai.setLayout(new java.awt.BorderLayout());

        beriNilaiBtn.setBackground(new java.awt.Color(0, 102, 0));
        beriNilaiBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        beriNilaiBtn.setForeground(new java.awt.Color(255, 255, 255));
        beriNilaiBtn.setText("Beri Nilai");
        beriNilaiBtn.setMargin(new java.awt.Insets(1, 15, 1, 15));
        beriNilaiBtn.setPreferredSize(new java.awt.Dimension(100, 20));
        beriNilaiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beriNilaiBtnActionPerformed(evt);
            }
        });
        boxBtnAddnilai.add(beriNilaiBtn, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        boxFieldJuri.add(boxBtnAddnilai, gridBagConstraints);

        editNilaiPeserta.setBackground(new java.awt.Color(0, 102, 0));
        editNilaiPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editNilaiPeserta.setForeground(new java.awt.Color(255, 255, 255));
        editNilaiPeserta.setText("Edit Nilai");
        editNilaiPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNilaiPesertaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        boxFieldJuri.add(editNilaiPeserta, gridBagConstraints);

        boxActJuri.add(boxFieldJuri, java.awt.BorderLayout.CENTER);

        boxCRUDjuri.add(boxActJuri, java.awt.BorderLayout.SOUTH);

        boxSouthFilter.setMinimumSize(new java.awt.Dimension(850, 75));
        boxSouthFilter.setOpaque(false);
        boxSouthFilter.setPreferredSize(new java.awt.Dimension(850, 75));
        boxSouthFilter.setLayout(new java.awt.GridBagLayout());

        jComboBoxPilihLomba.setBackground(new java.awt.Color(0, 102, 0));
        jComboBoxPilihLomba.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jComboBoxPilihLomba.setForeground(new java.awt.Color(255, 255, 255));
        // jComboBoxPilihLomba.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxPilihLomba.setModel(new javax.swing.DefaultComboBoxModel<>());
        jComboBoxPilihLomba.setMinimumSize(new java.awt.Dimension(175, 30));
        jComboBoxPilihLomba.setPreferredSize(new java.awt.Dimension(175, 30));
        jComboBoxPilihLomba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPilihLombaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        boxSouthFilter.add(jComboBoxPilihLomba, gridBagConstraints);

        jComboBoxPilihPeserta.setBackground(new java.awt.Color(0, 102, 0));
        jComboBoxPilihPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jComboBoxPilihPeserta.setForeground(new java.awt.Color(255, 255, 255));
        // jComboBoxPilihPeserta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxPilihPeserta.setMinimumSize(new java.awt.Dimension(225, 30));
        jComboBoxPilihPeserta.setPreferredSize(new java.awt.Dimension(225, 30));
        jComboBoxPilihPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPilihPesertaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        boxSouthFilter.add(jComboBoxPilihPeserta, gridBagConstraints);

        jComboBoxPilihAspek.setBackground(new java.awt.Color(0, 102, 0));
        jComboBoxPilihAspek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jComboBoxPilihAspek.setForeground(new java.awt.Color(255, 255, 255));
        // jComboBoxPilihAspek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxPilihAspek.setMinimumSize(new java.awt.Dimension(225, 30));
        jComboBoxPilihAspek.setPreferredSize(new java.awt.Dimension(225, 30));
        jComboBoxPilihAspek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPilihAspekActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        boxSouthFilter.add(jComboBoxPilihAspek, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("Pilih Lomba");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 125);
        boxSouthFilter.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 0));
        jLabel3.setText("Pilih Peserta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 125);
        boxSouthFilter.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 0));
        jLabel4.setText("Pilih Aspek Penilaian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 100);
        boxSouthFilter.add(jLabel4, gridBagConstraints);

        boxCRUDjuri.add(boxSouthFilter, java.awt.BorderLayout.NORTH);

        rightPanelPenilaian.add(boxCRUDjuri, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelPenilaian, "card3");

        jSplitPanePanitia.setRightComponent(kontenPanel);

        bgDashboardPanit.add(jSplitPanePanitia, java.awt.BorderLayout.CENTER);

        getContentPane().add(bgDashboardPanit, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void statistikPesertaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statistikPesertaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_statistikPesertaMouseClicked

    private void statistikPesertaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statistikPesertaMousePressed
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba); 
        rightpanelStatistik.setVisible(true);
        rightPanelPenilaian.setVisible(false);
        
        statistikPeserta.setBackground(new Color(0,76,6));
        penilaianPeserta.setBackground(new Color(0,102,0));
        
    }//GEN-LAST:event_statistikPesertaMousePressed

    private void PesertaStatistikMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PesertaStatistikMousePressed

    }//GEN-LAST:event_PesertaStatistikMousePressed

    private void penilaianPesertaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_penilaianPesertaMousePressed
        // TODO add your handling code here:
        jComboBoxPilihPeserta.setModel(new DefaultComboBoxModel<>());
        jComboBoxPilihAspek.setModel(new DefaultComboBoxModel<>());
        penilaianPesertaController controller = new penilaianPesertaController();
        jComboBoxPilihLomba.removeAllItems();

        for (Lomba l : controller.getDaftarLomba()) {
            jComboBoxPilihLomba.addItem(l);
        }
        tampilkanDataPenilaian();
        rightPanelPenilaian.setVisible(true);
        rightpanelStatistik.setVisible(false);
        
        penilaianPeserta.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
    }//GEN-LAST:event_penilaianPesertaMousePressed

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Apakah Anda yakin ingin logout?",
            "Konfirmasi Logout",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            Session.clearSession();
            this.dispose();
            new login_fix().setVisible(true);
        }
    }//GEN-LAST:event_logoutPanelMouseClicked

    private void logoutPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutPanelMousePressed

    private void fieldBeriNilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldBeriNilaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldBeriNilaiActionPerformed

    private void beriNilaiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beriNilaiBtnActionPerformed
        // TODO add your handling code here:

        Peserta peserta = (Peserta) jComboBoxPilihPeserta.getSelectedItem();
        AspekPenilaian aspek = (AspekPenilaian) jComboBoxPilihAspek.getSelectedItem();
        Lomba lomba = (Lomba) jComboBoxPilihLomba.getSelectedItem();

        if (peserta != null && aspek != null && lomba != null) {
            try {
                int skor = Integer.parseInt(fieldBeriNilai.getText());

                if (skor < 0 || skor > 100) {
                    JOptionPane.showMessageDialog(this, "Nilai harus antara 0 sampai 100.");
                    return;
                }

                
                int idJuri = Session.getCurrentUser().getId();
                
                penilaianPesertaController controller = new penilaianPesertaController();
                boolean sukses = controller.simpanNilai(
                    peserta.getIdPeserta(),
                    idJuri,
                    lomba.getIdLomba(),
                    aspek.getIdAspek(),
                    skor
                );

                if (sukses) {
                    JOptionPane.showMessageDialog(this, "Nilai berhasil disimpan.");
                    tampilkanDataPenilaian();
                    fieldBeriNilai.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menyimpan nilai.");
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Nilai harus berupa angka.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Peserta, aspek, atau lomba belum dipilih.");
        }

    }//GEN-LAST:event_beriNilaiBtnActionPerformed

    private void refreshBtnStatistik1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnStatistik1ActionPerformed
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba); 
        tampilkanDataPenilaian();       // TODO add your handling code here:

    }//GEN-LAST:event_refreshBtnStatistik1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        if (!Session.isLoggedIn() || !"juri".equalsIgnoreCase(Session.getCurrentUser().getRole())) {
            JOptionPane.showMessageDialog(this, "Silakan login terlebih dahulu sebagai juri.");
            dispose();
            new login_fix().setVisible(true);
        }
        
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba); 

    }//GEN-LAST:event_formWindowOpened

    private void jComboBoxPilihLombaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPilihLombaActionPerformed
        // TODO add your handling code here:
        // tampilkanPesertaBerdasarkanLomba();
        penilaianPesertaController controller = new penilaianPesertaController();
        Lomba selected = (Lomba) jComboBoxPilihLomba.getSelectedItem();

        if (selected != null) {
            jComboBoxPilihPeserta.removeAllItems();
            for (Peserta p : controller.getPesertaBerdasarkanLomba(selected.getIdLomba())) {
                jComboBoxPilihPeserta.addItem(p);
            }

            jComboBoxPilihAspek.removeAllItems();
            for (AspekPenilaian a : controller.getAspekBerdasarkanLomba(selected.getIdLomba())) {
                jComboBoxPilihAspek.addItem(a);
            }
        }
        tampilkanDataPenilaian();

    }//GEN-LAST:event_jComboBoxPilihLombaActionPerformed

    private void editNilaiPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNilaiPesertaActionPerformed
        // TODO add your handling code here:
        int row = tabelPenilaianPeserta.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih peserta yang ingin diedit.");
            return;
        }

        String namaPeserta = tabelPenilaianPeserta.getValueAt(row, 1).toString();
        String namaLomba = tabelPenilaianPeserta.getValueAt(row, 3).toString();
        String namaAspek = tabelPenilaianPeserta.getValueAt(row, 4).toString();
        String skorLama = tabelPenilaianPeserta.getValueAt(row, 5).toString();

        String skorBaruStr = JOptionPane.showInputDialog(this, "Masukkan skor baru:", skorLama);

        if (skorBaruStr != null && !skorBaruStr.isEmpty()) {
            try {
                int skorBaru = Integer.parseInt(skorBaruStr);
                if (skorBaru < 0 || skorBaru > 100) {
                    JOptionPane.showMessageDialog(this, "Nilai harus 0 - 100.");
                    return;
                }

                // Panggil controller update
                penilaianPesertaController controller = new penilaianPesertaController();
                boolean sukses = controller.updateSkor(namaPeserta, namaLomba, namaAspek, skorBaru);

                if (sukses) {
                    JOptionPane.showMessageDialog(this, "Nilai berhasil diupdate.");
                    tampilkanDataPenilaian(); // refresh tabel
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal update nilai.");
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Masukkan angka yang valid.");
            }
        }



    }//GEN-LAST:event_editNilaiPesertaActionPerformed

    private void jComboBoxPilihPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPilihPesertaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPilihPesertaActionPerformed

    private void jComboBoxPilihAspekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPilihAspekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPilihAspekActionPerformed

    private void tampilkanDataPenilaian() {
        User user = Session.getCurrentUser();
        

        Lomba selectedLomba = (Lomba) jComboBoxPilihLomba.getSelectedItem();
        if (selectedLomba == null) {
            return;
        }

        int idJuri = user.getId();
        int idLomba = selectedLomba.getIdLomba();

        DefaultTableModel model = (DefaultTableModel) tabelPenilaianPeserta.getModel();
        model.setRowCount(0);

        penilaianPesertaController controller = new penilaianPesertaController();
        List<Object[]> data = controller.getPenilaianByJuriDanLomba(idJuri, idLomba);

        for (Object[] row : data) {
            model.addRow(row);
        }
    }



    // private void isiComboBoxLomba() {
    //     penilaianPesertaController controller = new penilaianPesertaController();
    //     List<LombaItem> list = controller.getListLomba();
    
    //     // Pastikan comboBox tidak null sebelum dipakai
    //     if (jComboBoxPilihLombaPenilaian != null) {
    //         jComboBoxPilihLombaPenilaian.removeAllItems();
    
    //         for (LombaItem item : list) {
    //             jComboBoxPilihLombaPenilaian.addItem(item);
    //         }
    //     } else {
    //         System.out.println("jComboBoxPilihLombaPenilaian belum diinisialisasi!");
    //     }
    // }
    

    // private void tampilkanPesertaBerdasarkanLomba() {
    //     LombaItem item = (LombaItem) jComboBoxPilihLombaPenilaian.getSelectedItem();
    //     if (item == null) return;
    
    //     int idLomba = item.getIdLomba();
    
    //     DefaultTableModel model = new DefaultTableModel();
    
    //     List<String> kolomAspek = new ArrayList<>();
    //     try {
    //         Connection conn = dbConnection.getConnection();
    
    //         // Ambil aspek berdasarkan id_lomba
    //         String sqlAspek = "SELECT nama_aspek FROM aspek_penilaian WHERE id_lomba = ?";
    //         PreparedStatement psAspek = conn.prepareStatement(sqlAspek);
    //         psAspek.setInt(1, idLomba);
    //         ResultSet rsAspek = psAspek.executeQuery();
    
    //         model.addColumn("Nama Peserta");
    //         while (rsAspek.next()) {
    //             String namaAspek = rsAspek.getString("nama_aspek");
    //             kolomAspek.add(namaAspek);
    //             model.addColumn(namaAspek);
    //         }
    
    //         rsAspek.close();
    //         psAspek.close();
    
    //         // Ambil peserta & nilai per aspek
    //         String sqlPeserta = "SELECT p.nama_peserta, a.nama_aspek, n.skor " +
    //                             "FROM nilai n " +
    //                             "JOIN peserta p ON n.id_peserta = p.id_peserta " +
    //                             "JOIN aspek_penilaian a ON n.id_aspek = a.id_aspek " +
    //                             "WHERE n.id_lomba = ?";
    
    //         PreparedStatement ps = conn.prepareStatement(sqlPeserta);
    //         ps.setInt(1, idLomba);
    //         ResultSet rs = ps.executeQuery();
    
    //         // Map: nama_peserta -> Map<nama_aspek, skor>
    //         Map<String, Map<String, Integer>> dataMap = new LinkedHashMap<>();
    
    //         while (rs.next()) {
    //             String namaPeserta = rs.getString("nama_peserta");
    //             String aspek = rs.getString("nama_aspek");
    //             int skor = rs.getInt("skor");
    
    //             dataMap.putIfAbsent(namaPeserta, new HashMap<>());
    //             dataMap.get(namaPeserta).put(aspek, skor);
    //         }
    
    //         // Bangun baris tabel
    //         for (String namaPeserta : dataMap.keySet()) {
    //             Map<String, Integer> nilaiAspek = dataMap.get(namaPeserta);
    //             Object[] row = new Object[kolomAspek.size() + 1];
    //             row[0] = namaPeserta;
    //             for (int i = 0; i < kolomAspek.size(); i++) {
    //                 row[i + 1] = nilaiAspek.getOrDefault(kolomAspek.get(i), null);
    //             }
    //             model.addRow(row);
    //         }
    
    //         rs.close(); ps.close(); conn.close();
    
    //     } catch (SQLException e) {
    //         System.out.println("Gagal ambil data peserta: " + e.getMessage());
    //     }
    
    //     tabelJuri.setModel(model);
    // }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new DashboardJuri_fix().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PesertaStatistik;
    private javax.swing.JButton beriNilaiBtn;
    private javax.swing.JPanel bgDashboardPanit;
    private javax.swing.JPanel boxActJuri;
    private javax.swing.JPanel boxBtnAddnilai;
    private javax.swing.JPanel boxCRUDjuri;
    private javax.swing.JPanel boxCard;
    private javax.swing.JPanel boxFieldJuri;
    private javax.swing.JPanel boxPaneltabel;
    private javax.swing.JPanel boxPerkembanganpeserta;
    private javax.swing.JPanel boxRefresh;
    private javax.swing.JPanel boxSouthFilter;
    private javax.swing.JPanel boxtabelNilai;
    private javax.swing.JPanel cardTotalJuri;
    private javax.swing.JPanel cardTotalLomba;
    private javax.swing.JPanel cardTotalPeserta;
    private javax.swing.JButton editNilaiPeserta;
    private javax.swing.JTextField fieldBeriNilai;
    private javax.swing.JPanel headerNavbar;
    private javax.swing.JPanel headerNavbar1;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel headerTxt;
    private javax.swing.JLabel inputNilaiLabel;
    private javax.swing.JComboBox<model.AspekPenilaian> jComboBoxPilihAspek;
    private javax.swing.JComboBox<model.Lomba> jComboBoxPilihLomba;
    private javax.swing.JComboBox<model.Peserta> jComboBoxPilihPeserta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPanePanitia;
    private javax.swing.JPanel kontenPanel;
    private javax.swing.JPanel leftPanelside;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JLabel logoutTxt;
    private javax.swing.JPanel menuNavbar;
    private javax.swing.JPanel navbarBox;
    private javax.swing.JPanel penilaianPeserta;
    private javax.swing.JButton refreshBtnStatistik1;
    private javax.swing.JPanel rightPanelPenilaian;
    private javax.swing.JPanel rightpanelStatistik;
    private javax.swing.JScrollPane scrollTabelPenilaianPeserta;
    private javax.swing.JPanel statistikPeserta;
    private javax.swing.JTable tabelPenilaianPeserta;
    private javax.swing.JTable tabelStatistikLomba;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel totalJuritxt;
    private javax.swing.JLabel totalLombatxt;
    private javax.swing.JLabel totalPesertatxt;
    // End of variables declaration//GEN-END:variables
}
