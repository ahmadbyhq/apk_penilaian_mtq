package ui;

import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


import controller.*;
import java.util.*;
import auth.*;

import javax.swing.*;
import javax.swing.table.*;

import model.*;

public class DashboardPanitia extends javax.swing.JFrame {

    private StatistikController statistikController;
    private DaftarpesertaController pesertaController;
    private DaftarLombaController daftarLombaController; 
    private daftarJuaraController juaraController;
    private List<Peserta> listPesertaTabel;
    private List<Lomba> listLombaTabel;
    private List<AspekPenilaian> listAspekTabel;
    private AspekPenilaianController aspekController;




    
    public DashboardPanitia() {
        initComponents();
        this.setLocationRelativeTo(null);
        statistikController = new StatistikController();
        pesertaController = new DaftarpesertaController();
        daftarLombaController = new DaftarLombaController();
        juaraController = new daftarJuaraController();
        
        
        
        
        DefaultTableModel model = new DefaultTableModel(
            new Object[][]{},
            new String[]{"Nama Juri", "Username", "Password"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tabelJuri.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgDashboardPanit = new javax.swing.JPanel();
        jSplitPanePanitia = new javax.swing.JSplitPane();
        leftPanelside = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerTxt = new javax.swing.JLabel();
        navbarBox = new javax.swing.JPanel();
        menuNavbar = new javax.swing.JPanel();
        statistikPeserta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        daftarJuri = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        daftarPeserta = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        daftarLomba = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        aspekLomba = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        rekapNilai = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        daftarJuara = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        logoutPanel = new javax.swing.JPanel();
        logoutTxt = new javax.swing.JLabel();
        kontenPanel = new javax.swing.JPanel();
        rightpanelStatistik = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        headerNavbar = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        boxCard = new javax.swing.JPanel();
        cardTotalPeserta = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        totalPesertatxt = new javax.swing.JLabel();
        cardTotalJuri = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        totalJuritxt = new javax.swing.JLabel();
        cardTotalLomba = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        totalLombatxt = new javax.swing.JLabel();
        boxRefresh = new javax.swing.JPanel();
        refreshBtnStatistik = new javax.swing.JButton();
        boxPerkembanganpeserta = new javax.swing.JPanel();
        boxPaneltabel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelStatistikLomba = new javax.swing.JTable();
        rightPanelJuri = new javax.swing.JPanel();
        headerNavbar1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        boxCRUDjuri = new javax.swing.JPanel();
        boxTabel = new javax.swing.JPanel();
        boxActJuri = new javax.swing.JPanel();
        refreshBox = new javax.swing.JPanel();
        btnRefresh = new javax.swing.JButton();
        boxFieldJuri = new javax.swing.JPanel();
        namaLabel = new javax.swing.JLabel();
        fieldNama = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        fieldUsername = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        fieldPassword = new javax.swing.JPasswordField();
        boxBtnJuriAct = new javax.swing.JPanel();
        addJuri = new javax.swing.JButton();
        editJuri = new javax.swing.JButton();
        delJuri = new javax.swing.JButton();
        leftBoxtabeljuri = new javax.swing.JPanel();
        scrollTabeljuri = new javax.swing.JScrollPane();
        tabelJuri = new javax.swing.JTable();
        rightPanelPeserta = new javax.swing.JPanel();
        headerNavbar6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        boxPerkembanganpeserta6 = new javax.swing.JPanel();
        boxPaneltabel6 = new javax.swing.JPanel();
        boxField_DaftarPeserta = new javax.swing.JPanel();
        boxRefresh_DaftarPeserta = new javax.swing.JPanel();
        btnRefreshPeserta = new javax.swing.JButton();
        btnImportPeserta = new javax.swing.JButton();
        boxCRUD_DaftarPeserta = new javax.swing.JPanel();
        labelCariPeserta = new javax.swing.JLabel();
        fieldCariPeserta = new javax.swing.JTextField();
        labelNamaPeserta = new javax.swing.JLabel();
        fieldNamaPeserta = new javax.swing.JTextField();
        labelAsalPeserta = new javax.swing.JLabel();
        fieldAsalPeserta = new javax.swing.JTextField();
        labelLombaPeserta = new javax.swing.JLabel();
        comboboxLombaPeserta = new javax.swing.JComboBox<>();
        boxBtn_DaftarPeserta = new javax.swing.JPanel();
        btnAddPeserta = new javax.swing.JButton();
        btnEditPeserta = new javax.swing.JButton();
        btnHapusPeserta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelPeserta = new javax.swing.JTable();
        rightPanelLomba = new javax.swing.JPanel();
        headerNavbar7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        boxPerkembanganpeserta7 = new javax.swing.JPanel();
        boxPaneltabel7 = new javax.swing.JPanel();
        boxTabel_DaftarLomba = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelLomba = new javax.swing.JTable();
        boxField_DaftarLomba = new javax.swing.JPanel();
        boxRefresh_DaftarLomba = new javax.swing.JPanel();
        btnRefreshLomba = new javax.swing.JButton();
        boxBtn_DaftarLomba = new javax.swing.JPanel();
        btnAddLomba = new javax.swing.JButton();
        btnEditLomba = new javax.swing.JButton();
        btnHapusLomba = new javax.swing.JButton();
        boxCRUD_DaftarLomba = new javax.swing.JPanel();
        namaLombalabelLomba = new javax.swing.JLabel();
        namaLombaField = new javax.swing.JTextField();
        kuotaLabel = new javax.swing.JLabel();
        kuotaField = new javax.swing.JTextField();
        rightPanelRekap = new javax.swing.JPanel();
        headerNavbar8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        boxPerkembanganpeserta8 = new javax.swing.JPanel();
        boxPaneltabel8 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabelRekapNilai = new javax.swing.JTable();
        panelBoxRekap = new javax.swing.JPanel();
        btnEksporPDF = new javax.swing.JButton();
        labelSearch = new javax.swing.JLabel();
        fieldCariRekap = new javax.swing.JTextField();
        btnRefreshRekapNilai = new javax.swing.JButton();
        rightPanelJuara = new javax.swing.JPanel();
        headerNavbar9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        boxPerkembanganpeserta9 = new javax.swing.JPanel();
        boxPaneltabel9 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tabelJuara = new javax.swing.JTable();
        boxBtnJuara = new javax.swing.JPanel();
        RefreshBtnJuara = new javax.swing.JButton();
        eksporPDFJuara = new javax.swing.JButton();
        rightPanelAspek = new javax.swing.JPanel();
        headerNavbar10 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        boxPerkembanganpeserta10 = new javax.swing.JPanel();
        boxPaneltabel10 = new javax.swing.JPanel();
        boxTabel_AspekPenilaian = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelAspek = new javax.swing.JTable();
        box_AspekPenilaian = new javax.swing.JPanel();
        boxRefresh_AspekPenilaian = new javax.swing.JPanel();
        btnRefreshAspek = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnAddAspek = new javax.swing.JButton();
        btnEditAspek = new javax.swing.JButton();
        btnDeleteAspek = new javax.swing.JButton();
        boxField_AspekPenilaian = new javax.swing.JPanel();
        labelAspek = new javax.swing.JLabel();
        namaAspekfield = new javax.swing.JTextField();
        lombaLabelAspek = new javax.swing.JLabel();
        presentaseLabel = new javax.swing.JLabel();
        presentaseField = new javax.swing.JTextField();
        comboboxLombaAspek = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard Panitia");
        setMinimumSize(new java.awt.Dimension(1100, 475));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bgDashboardPanit.setMinimumSize(new java.awt.Dimension(1100, 475));
        bgDashboardPanit.setLayout(new java.awt.BorderLayout());

        jSplitPanePanitia.setDividerLocation(250);
        jSplitPanePanitia.setDividerSize(0);
        jSplitPanePanitia.setMinimumSize(new java.awt.Dimension(1100, 475));
        jSplitPanePanitia.setPreferredSize(new java.awt.Dimension(1100, 475));

        leftPanelside.setBackground(new java.awt.Color(0, 102, 0));
        leftPanelside.setMinimumSize(new java.awt.Dimension(250, 475));
        leftPanelside.setLayout(new java.awt.BorderLayout());

        headerPanel.setBackground(new java.awt.Color(0, 85, 15));
        headerPanel.setMinimumSize(new java.awt.Dimension(250, 50));
        headerPanel.setPreferredSize(new java.awt.Dimension(250, 50));
        headerPanel.setLayout(new java.awt.BorderLayout());

        headerTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        headerTxt.setForeground(new java.awt.Color(255, 255, 255));
        headerTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerTxt.setText("Dashboard Panitia");
        headerPanel.add(headerTxt, java.awt.BorderLayout.CENTER);

        leftPanelside.add(headerPanel, java.awt.BorderLayout.NORTH);

        navbarBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 1, 1, 1));
        navbarBox.setOpaque(false);
        navbarBox.setLayout(new java.awt.BorderLayout());

        menuNavbar.setMinimumSize(new java.awt.Dimension(250, 350));
        menuNavbar.setOpaque(false);
        menuNavbar.setPreferredSize(new java.awt.Dimension(250, 350));
        menuNavbar.setLayout(new java.awt.GridBagLayout());

        statistikPeserta.setBackground(new java.awt.Color(0, 76, 6));
        statistikPeserta.setMinimumSize(new java.awt.Dimension(250, 50));
        statistikPeserta.setPreferredSize(new java.awt.Dimension(250, 50));
        statistikPeserta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statistikPesertaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statistikPesertaMousePressed(evt);
            }
        });
        statistikPeserta.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/monitoring_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel1.setText("Statistik Peserta");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIconTextGap(16);
        jLabel1.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel1.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel1.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        statistikPeserta.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        menuNavbar.add(statistikPeserta, gridBagConstraints);

        daftarJuri.setBackground(new java.awt.Color(0, 102, 0));
        daftarJuri.setMinimumSize(new java.awt.Dimension(250, 50));
        daftarJuri.setPreferredSize(new java.awt.Dimension(250, 50));
        daftarJuri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                daftarJuriMousePressed(evt);
            }
        });
        daftarJuri.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/person_edit_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel2.setText("Daftar Juri");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIconTextGap(16);
        jLabel2.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel2.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel2.setPreferredSize(new java.awt.Dimension(225, 30));
        daftarJuri.add(jLabel2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        menuNavbar.add(daftarJuri, gridBagConstraints);

        daftarPeserta.setBackground(new java.awt.Color(0, 102, 0));
        daftarPeserta.setMinimumSize(new java.awt.Dimension(250, 50));
        daftarPeserta.setPreferredSize(new java.awt.Dimension(250, 50));
        daftarPeserta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                daftarPesertaMousePressed(evt);
            }
        });
        daftarPeserta.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/group_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel3.setText("Daftar Peserta");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIconTextGap(16);
        jLabel3.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel3.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel3.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        daftarPeserta.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        menuNavbar.add(daftarPeserta, gridBagConstraints);

        daftarLomba.setBackground(new java.awt.Color(0, 102, 0));
        daftarLomba.setMinimumSize(new java.awt.Dimension(250, 50));
        daftarLomba.setPreferredSize(new java.awt.Dimension(250, 50));
        daftarLomba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                daftarLombaMousePressed(evt);
            }
        });
        daftarLomba.setLayout(new java.awt.GridBagLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/assignment_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel13.setText("Daftar Lomba");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel13.setIconTextGap(16);
        jLabel13.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel13.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel13.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        daftarLomba.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        menuNavbar.add(daftarLomba, gridBagConstraints);

        aspekLomba.setBackground(new java.awt.Color(0, 102, 0));
        aspekLomba.setMinimumSize(new java.awt.Dimension(250, 50));
        aspekLomba.setPreferredSize(new java.awt.Dimension(250, 50));
        aspekLomba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aspekLombaMousePressed(evt);
            }
        });
        aspekLomba.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/list_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel7.setText("Aspek Penilaian");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel7.setIconTextGap(16);
        jLabel7.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel7.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel7.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        aspekLomba.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        menuNavbar.add(aspekLomba, gridBagConstraints);

        rekapNilai.setBackground(new java.awt.Color(0, 102, 0));
        rekapNilai.setMinimumSize(new java.awt.Dimension(250, 50));
        rekapNilai.setPreferredSize(new java.awt.Dimension(250, 50));
        rekapNilai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rekapNilaiMousePressed(evt);
            }
        });
        rekapNilai.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/leaderboard_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel4.setText("Rekap Nilai");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIconTextGap(16);
        jLabel4.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel4.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel4.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        rekapNilai.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        menuNavbar.add(rekapNilai, gridBagConstraints);

        daftarJuara.setBackground(new java.awt.Color(0, 102, 0));
        daftarJuara.setMinimumSize(new java.awt.Dimension(250, 50));
        daftarJuara.setPreferredSize(new java.awt.Dimension(250, 50));
        daftarJuara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                daftarJuaraMousePressed(evt);
            }
        });
        daftarJuara.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/social_leaderboard_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        jLabel5.setText("Daftar Juara");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIconTextGap(16);
        jLabel5.setMaximumSize(new java.awt.Dimension(225, 30));
        jLabel5.setMinimumSize(new java.awt.Dimension(225, 30));
        jLabel5.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        daftarJuara.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        menuNavbar.add(daftarJuara, gridBagConstraints);

        navbarBox.add(menuNavbar, java.awt.BorderLayout.NORTH);

        leftPanelside.add(navbarBox, java.awt.BorderLayout.CENTER);

        logoutPanel.setBackground(new java.awt.Color(0, 85, 6));
        logoutPanel.setMinimumSize(new java.awt.Dimension(250, 50));
        logoutPanel.setPreferredSize(new java.awt.Dimension(250, 50));
        logoutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutPanelMousePressed(evt);
            }
        });
        logoutPanel.setLayout(new java.awt.GridBagLayout());

        logoutTxt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutTxt.setForeground(new java.awt.Color(255, 255, 255));
        logoutTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/logout_24dp_E3E3E3_FILL0_wght400_GRAD0_opsz24.png"))); // NOI18N
        logoutTxt.setText("Logout");
        logoutTxt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        logoutTxt.setIconTextGap(16);
        logoutTxt.setMaximumSize(new java.awt.Dimension(225, 30));
        logoutTxt.setMinimumSize(new java.awt.Dimension(225, 30));
        logoutTxt.setPreferredSize(new java.awt.Dimension(225, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 25);
        logoutPanel.add(logoutTxt, gridBagConstraints);

        leftPanelside.add(logoutPanel, java.awt.BorderLayout.SOUTH);

        jSplitPanePanitia.setLeftComponent(leftPanelside);

        kontenPanel.setPreferredSize(new java.awt.Dimension(850, 475));
        kontenPanel.setLayout(new java.awt.CardLayout());

        rightpanelStatistik.setBackground(new java.awt.Color(255, 255, 255));
        rightpanelStatistik.setMinimumSize(new java.awt.Dimension(850, 475));
        rightpanelStatistik.setLayout(new java.awt.BorderLayout());

        topPanel.setOpaque(false);
        topPanel.setLayout(new java.awt.BorderLayout());

        headerNavbar.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar.setLayout(new java.awt.BorderLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Statistik Peserta");
        headerNavbar.add(jLabel6, java.awt.BorderLayout.CENTER);

        topPanel.add(headerNavbar, java.awt.BorderLayout.NORTH);

        boxCard.setMinimumSize(new java.awt.Dimension(850, 125));
        boxCard.setOpaque(false);
        boxCard.setPreferredSize(new java.awt.Dimension(850, 125));
        boxCard.setLayout(new java.awt.GridBagLayout());

        cardTotalPeserta.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalPeserta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cardTotalPeserta.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalPeserta.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalPeserta.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(0, 76, 6));
        jPanel8.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel8.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Total Peserta");
        jPanel8.add(jLabel8, java.awt.BorderLayout.CENTER);

        cardTotalPeserta.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel10.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.BorderLayout());
        cardTotalPeserta.add(jPanel10, java.awt.BorderLayout.SOUTH);

        totalPesertatxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalPesertatxt.setForeground(new java.awt.Color(255, 255, 255));
        totalPesertatxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cardTotalPeserta.add(totalPesertatxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        boxCard.add(cardTotalPeserta, gridBagConstraints);

        cardTotalJuri.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalJuri.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalJuri.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalJuri.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(0, 76, 6));
        jPanel12.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel12.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Total Juri");
        jPanel12.add(jLabel9, java.awt.BorderLayout.CENTER);

        cardTotalJuri.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel13.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel13.setOpaque(false);
        jPanel13.setLayout(new java.awt.BorderLayout());
        cardTotalJuri.add(jPanel13, java.awt.BorderLayout.SOUTH);

        totalJuritxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalJuritxt.setForeground(new java.awt.Color(255, 255, 255));
        totalJuritxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cardTotalJuri.add(totalJuritxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        boxCard.add(cardTotalJuri, gridBagConstraints);

        cardTotalLomba.setBackground(new java.awt.Color(0, 102, 0));
        cardTotalLomba.setMinimumSize(new java.awt.Dimension(175, 100));
        cardTotalLomba.setPreferredSize(new java.awt.Dimension(175, 100));
        cardTotalLomba.setLayout(new java.awt.BorderLayout());

        jPanel14.setBackground(new java.awt.Color(0, 76, 6));
        jPanel14.setMinimumSize(new java.awt.Dimension(175, 35));
        jPanel14.setPreferredSize(new java.awt.Dimension(175, 35));
        jPanel14.setLayout(new java.awt.BorderLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Total Lomba");
        jPanel14.add(jLabel11, java.awt.BorderLayout.CENTER);

        cardTotalLomba.add(jPanel14, java.awt.BorderLayout.NORTH);

        jPanel15.setMinimumSize(new java.awt.Dimension(175, 65));
        jPanel15.setOpaque(false);
        jPanel15.setLayout(new java.awt.BorderLayout());
        cardTotalLomba.add(jPanel15, java.awt.BorderLayout.SOUTH);

        totalLombatxt.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        totalLombatxt.setForeground(new java.awt.Color(255, 255, 255));
        totalLombatxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cardTotalLomba.add(totalLombatxt, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        boxCard.add(cardTotalLomba, gridBagConstraints);

        boxRefresh.setMinimumSize(new java.awt.Dimension(100, 100));
        boxRefresh.setOpaque(false);
        boxRefresh.setLayout(new java.awt.CardLayout());

        refreshBtnStatistik.setBackground(new java.awt.Color(0, 102, 0));
        refreshBtnStatistik.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        refreshBtnStatistik.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtnStatistik.setText("Refresh");
        refreshBtnStatistik.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshBtnStatistik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnStatistikActionPerformed(evt);
            }
        });
        boxRefresh.add(refreshBtnStatistik, "card2");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        boxCard.add(boxRefresh, gridBagConstraints);

        topPanel.add(boxCard, java.awt.BorderLayout.CENTER);

        rightpanelStatistik.add(topPanel, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta.setOpaque(false);
        boxPerkembanganpeserta.setLayout(new java.awt.BorderLayout());

        boxPaneltabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 20, 20));
        boxPaneltabel.setOpaque(false);
        boxPaneltabel.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setMinimumSize(new java.awt.Dimension(810, 280));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(810, 280));

        tabelStatistikLomba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nama Lomba", "Total Peserta", "Kuota"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelStatistikLomba.setMinimumSize(new java.awt.Dimension(810, 280));
        tabelStatistikLomba.setPreferredSize(new java.awt.Dimension(810, 280));
        tabelStatistikLomba.setRowHeight(25);
        tabelStatistikLomba.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelStatistikLomba.setShowGrid(true);
        jScrollPane3.setViewportView(tabelStatistikLomba);

        boxPaneltabel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        boxPerkembanganpeserta.add(boxPaneltabel, java.awt.BorderLayout.CENTER);

        rightpanelStatistik.add(boxPerkembanganpeserta, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightpanelStatistik, "card2");

        rightPanelJuri.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelJuri.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelJuri.setLayout(new java.awt.BorderLayout());

        headerNavbar1.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar1.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar1.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar1.setLayout(new java.awt.BorderLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Daftar Juri");
        headerNavbar1.add(jLabel14, java.awt.BorderLayout.CENTER);

        rightPanelJuri.add(headerNavbar1, java.awt.BorderLayout.NORTH);

        boxCRUDjuri.setMinimumSize(new java.awt.Dimension(825, 275));
        boxCRUDjuri.setOpaque(false);
        boxCRUDjuri.setPreferredSize(new java.awt.Dimension(825, 275));
        boxCRUDjuri.setLayout(new java.awt.BorderLayout());

        boxTabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        boxTabel.setMinimumSize(new java.awt.Dimension(865, 275));
        boxTabel.setOpaque(false);
        boxTabel.setPreferredSize(new java.awt.Dimension(865, 275));
        boxTabel.setLayout(new java.awt.BorderLayout());

        boxActJuri.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 15, 1, 1));
        boxActJuri.setMinimumSize(new java.awt.Dimension(300, 375));
        boxActJuri.setOpaque(false);
        boxActJuri.setPreferredSize(new java.awt.Dimension(300, 375));
        boxActJuri.setLayout(new java.awt.BorderLayout());

        refreshBox.setOpaque(false);
        refreshBox.setLayout(new java.awt.CardLayout());

        btnRefresh.setBackground(new java.awt.Color(0, 102, 0));
        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        refreshBox.add(btnRefresh, "card2");

        boxActJuri.add(refreshBox, java.awt.BorderLayout.NORTH);

        boxFieldJuri.setBackground(new java.awt.Color(204, 204, 204));
        boxFieldJuri.setMinimumSize(new java.awt.Dimension(300, 275));
        boxFieldJuri.setOpaque(false);
        boxFieldJuri.setPreferredSize(new java.awt.Dimension(300, 275));
        boxFieldJuri.setLayout(new java.awt.GridBagLayout());

        namaLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        namaLabel.setForeground(new java.awt.Color(0, 102, 0));
        namaLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        namaLabel.setText("Nama");
        namaLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxFieldJuri.add(namaLabel, gridBagConstraints);

        fieldNama.setBackground(new java.awt.Color(0, 102, 0));
        fieldNama.setForeground(new java.awt.Color(255, 255, 255));
        fieldNama.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldNama.setMinimumSize(new java.awt.Dimension(200, 35));
        fieldNama.setPreferredSize(new java.awt.Dimension(200, 35));
        fieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNamaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        boxFieldJuri.add(fieldNama, gridBagConstraints);

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(0, 102, 0));
        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        usernameLabel.setText("Username");
        usernameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        boxFieldJuri.add(usernameLabel, gridBagConstraints);

        fieldUsername.setBackground(new java.awt.Color(0, 102, 0));
        fieldUsername.setForeground(new java.awt.Color(255, 255, 255));
        fieldUsername.setMinimumSize(new java.awt.Dimension(200, 35));
        fieldUsername.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        boxFieldJuri.add(fieldUsername, gridBagConstraints);

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(0, 102, 0));
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passwordLabel.setText("Password");
        passwordLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        boxFieldJuri.add(passwordLabel, gridBagConstraints);

        fieldPassword.setBackground(new java.awt.Color(0, 102, 0));
        fieldPassword.setForeground(new java.awt.Color(255, 255, 255));
        fieldPassword.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fieldPassword.setMinimumSize(new java.awt.Dimension(200, 35));
        fieldPassword.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        boxFieldJuri.add(fieldPassword, gridBagConstraints);

        boxActJuri.add(boxFieldJuri, java.awt.BorderLayout.CENTER);

        boxBtnJuriAct.setOpaque(false);
        boxBtnJuriAct.setLayout(new java.awt.GridBagLayout());

        addJuri.setBackground(new java.awt.Color(0, 102, 0));
        addJuri.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addJuri.setForeground(new java.awt.Color(255, 255, 255));
        addJuri.setText("Tambah");
        addJuri.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addJuri.setMargin(new java.awt.Insets(2, 10, 2, 10));
        addJuri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJuriActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        boxBtnJuriAct.add(addJuri, gridBagConstraints);

        editJuri.setBackground(new java.awt.Color(0, 102, 0));
        editJuri.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editJuri.setForeground(new java.awt.Color(255, 255, 255));
        editJuri.setText("Edit");
        editJuri.setMargin(new java.awt.Insets(1, 15, 1, 15));
        editJuri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editJuriActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        boxBtnJuriAct.add(editJuri, gridBagConstraints);

        delJuri.setBackground(new java.awt.Color(0, 102, 0));
        delJuri.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delJuri.setForeground(new java.awt.Color(255, 255, 255));
        delJuri.setText("Hapus");
        delJuri.setMargin(new java.awt.Insets(1, 15, 1, 15));
        delJuri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delJuriActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        boxBtnJuriAct.add(delJuri, gridBagConstraints);

        boxActJuri.add(boxBtnJuriAct, java.awt.BorderLayout.PAGE_END);

        boxTabel.add(boxActJuri, java.awt.BorderLayout.EAST);

        leftBoxtabeljuri.setLayout(new java.awt.BorderLayout());

        scrollTabeljuri.setMinimumSize(null);

        tabelJuri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nama Juri", "Username", "Password"
            }
        ));
        tabelJuri.setRowHeight(25);
        tabelJuri.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelJuri.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelJuri.setShowGrid(true);
        scrollTabeljuri.setViewportView(tabelJuri);

        leftBoxtabeljuri.add(scrollTabeljuri, java.awt.BorderLayout.CENTER);

        boxTabel.add(leftBoxtabeljuri, java.awt.BorderLayout.CENTER);

        boxCRUDjuri.add(boxTabel, java.awt.BorderLayout.CENTER);

        rightPanelJuri.add(boxCRUDjuri, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelJuri, "card3");

        rightPanelPeserta.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelPeserta.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelPeserta.setLayout(new java.awt.BorderLayout());

        headerNavbar6.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar6.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar6.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar6.setLayout(new java.awt.BorderLayout());

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Daftar Peserta");
        headerNavbar6.add(jLabel15, java.awt.BorderLayout.CENTER);

        rightPanelPeserta.add(headerNavbar6, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta6.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta6.setOpaque(false);
        boxPerkembanganpeserta6.setPreferredSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta6.setLayout(new java.awt.BorderLayout());

        boxPaneltabel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        boxPaneltabel6.setOpaque(false);
        boxPaneltabel6.setLayout(new java.awt.BorderLayout());

        boxField_DaftarPeserta.setBackground(new java.awt.Color(255, 255, 255));
        boxField_DaftarPeserta.setPreferredSize(new java.awt.Dimension(275, 385));
        boxField_DaftarPeserta.setLayout(new java.awt.BorderLayout());

        boxRefresh_DaftarPeserta.setBackground(new java.awt.Color(255, 255, 255));
        boxRefresh_DaftarPeserta.setPreferredSize(new java.awt.Dimension(100, 35));

        btnRefreshPeserta.setBackground(new java.awt.Color(0, 102, 0));
        btnRefreshPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefreshPeserta.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshPeserta.setText("Refresh");
        btnRefreshPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPesertaActionPerformed(evt);
            }
        });
        boxRefresh_DaftarPeserta.add(btnRefreshPeserta);

        btnImportPeserta.setBackground(new java.awt.Color(0, 102, 0));
        btnImportPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnImportPeserta.setForeground(new java.awt.Color(255, 255, 255));
        btnImportPeserta.setText("Import");
        btnImportPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportPesertaActionPerformed(evt);
            }
        });
        boxRefresh_DaftarPeserta.add(btnImportPeserta);

        boxField_DaftarPeserta.add(boxRefresh_DaftarPeserta, java.awt.BorderLayout.PAGE_START);

        boxCRUD_DaftarPeserta.setBackground(new java.awt.Color(255, 255, 255));
        boxCRUD_DaftarPeserta.setLayout(new java.awt.GridBagLayout());

        labelCariPeserta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelCariPeserta.setForeground(new java.awt.Color(0, 102, 0));
        labelCariPeserta.setText("Cari");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(labelCariPeserta, gridBagConstraints);

        fieldCariPeserta.setBackground(new java.awt.Color(0, 102, 51));
        fieldCariPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fieldCariPeserta.setForeground(new java.awt.Color(255, 255, 255));
        fieldCariPeserta.setPreferredSize(new java.awt.Dimension(200, 35));
        fieldCariPeserta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldCariPesertaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldCariPesertaKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(fieldCariPeserta, gridBagConstraints);

        labelNamaPeserta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelNamaPeserta.setForeground(new java.awt.Color(0, 102, 0));
        labelNamaPeserta.setText("Nama Peserta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(labelNamaPeserta, gridBagConstraints);

        fieldNamaPeserta.setBackground(new java.awt.Color(0, 102, 0));
        fieldNamaPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fieldNamaPeserta.setForeground(new java.awt.Color(255, 255, 255));
        fieldNamaPeserta.setPreferredSize(new java.awt.Dimension(200, 35));
        fieldNamaPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNamaPesertaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(fieldNamaPeserta, gridBagConstraints);

        labelAsalPeserta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelAsalPeserta.setForeground(new java.awt.Color(0, 102, 0));
        labelAsalPeserta.setText("Asal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(labelAsalPeserta, gridBagConstraints);

        fieldAsalPeserta.setBackground(new java.awt.Color(0, 102, 51));
        fieldAsalPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fieldAsalPeserta.setForeground(new java.awt.Color(255, 255, 255));
        fieldAsalPeserta.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(fieldAsalPeserta, gridBagConstraints);

        labelLombaPeserta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelLombaPeserta.setForeground(new java.awt.Color(0, 102, 0));
        labelLombaPeserta.setText("Lomba");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(labelLombaPeserta, gridBagConstraints);

        comboboxLombaPeserta.setBackground(new java.awt.Color(0, 102, 0));
        comboboxLombaPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        comboboxLombaPeserta.setForeground(new java.awt.Color(255, 255, 255));
        comboboxLombaPeserta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboboxLombaPeserta.setMinimumSize(new java.awt.Dimension(200, 35));
        comboboxLombaPeserta.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarPeserta.add(comboboxLombaPeserta, gridBagConstraints);

        boxField_DaftarPeserta.add(boxCRUD_DaftarPeserta, java.awt.BorderLayout.CENTER);

        boxBtn_DaftarPeserta.setBackground(new java.awt.Color(255, 255, 255));
        boxBtn_DaftarPeserta.setPreferredSize(new java.awt.Dimension(100, 35));

        btnAddPeserta.setBackground(new java.awt.Color(0, 102, 0));
        btnAddPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddPeserta.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPeserta.setText("Tambah");
        btnAddPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPesertaActionPerformed(evt);
            }
        });
        boxBtn_DaftarPeserta.add(btnAddPeserta);

        btnEditPeserta.setBackground(new java.awt.Color(0, 102, 0));
        btnEditPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditPeserta.setForeground(new java.awt.Color(255, 255, 255));
        btnEditPeserta.setText("Edit");
        btnEditPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPesertaActionPerformed(evt);
            }
        });
        boxBtn_DaftarPeserta.add(btnEditPeserta);

        btnHapusPeserta.setBackground(new java.awt.Color(0, 102, 0));
        btnHapusPeserta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapusPeserta.setForeground(new java.awt.Color(255, 255, 255));
        btnHapusPeserta.setText("Hapus");
        btnHapusPeserta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusPesertaActionPerformed(evt);
            }
        });
        boxBtn_DaftarPeserta.add(btnHapusPeserta);

        boxField_DaftarPeserta.add(boxBtn_DaftarPeserta, java.awt.BorderLayout.PAGE_END);

        boxPaneltabel6.add(boxField_DaftarPeserta, java.awt.BorderLayout.EAST);

        jScrollPane2.setMinimumSize(null);

        tabelPeserta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Nama Peserta", "Asal", "Lomba"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPeserta.setRowHeight(25);
        tabelPeserta.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelPeserta.setShowGrid(true);
        jScrollPane2.setViewportView(tabelPeserta);
        if (tabelPeserta.getColumnModel().getColumnCount() > 0) {
            tabelPeserta.getColumnModel().getColumn(0).setMinWidth(40);
            tabelPeserta.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelPeserta.getColumnModel().getColumn(3).setMinWidth(200);
            tabelPeserta.getColumnModel().getColumn(3).setMaxWidth(200);
        }

        boxPaneltabel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        boxPerkembanganpeserta6.add(boxPaneltabel6, java.awt.BorderLayout.CENTER);

        rightPanelPeserta.add(boxPerkembanganpeserta6, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelPeserta, "card4");

        rightPanelLomba.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelLomba.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelLomba.setLayout(new java.awt.BorderLayout());

        headerNavbar7.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar7.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar7.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar7.setLayout(new java.awt.BorderLayout());

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Daftar Lomba");
        headerNavbar7.add(jLabel16, java.awt.BorderLayout.CENTER);

        rightPanelLomba.add(headerNavbar7, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta7.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta7.setOpaque(false);
        boxPerkembanganpeserta7.setPreferredSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta7.setLayout(new java.awt.BorderLayout());

        boxPaneltabel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        boxPaneltabel7.setOpaque(false);
        boxPaneltabel7.setLayout(new java.awt.BorderLayout());

        boxTabel_DaftarLomba.setBackground(new java.awt.Color(255, 255, 255));
        boxTabel_DaftarLomba.setPreferredSize(new java.awt.Dimension(500, 100));
        boxTabel_DaftarLomba.setLayout(new java.awt.BorderLayout());

        jScrollPane4.setMinimumSize(null);

        tabelLomba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama Lomba", "Kuota"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelLomba.setRowHeight(25);
        tabelLomba.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelLomba.setShowGrid(true);
        jScrollPane4.setViewportView(tabelLomba);

        boxTabel_DaftarLomba.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        boxPaneltabel7.add(boxTabel_DaftarLomba, java.awt.BorderLayout.CENTER);

        boxField_DaftarLomba.setBackground(new java.awt.Color(255, 255, 255));
        boxField_DaftarLomba.setMinimumSize(new java.awt.Dimension(310, 385));
        boxField_DaftarLomba.setPreferredSize(new java.awt.Dimension(310, 385));
        boxField_DaftarLomba.setLayout(new java.awt.BorderLayout());

        boxRefresh_DaftarLomba.setBackground(new java.awt.Color(255, 255, 255));
        boxRefresh_DaftarLomba.setPreferredSize(new java.awt.Dimension(100, 35));

        btnRefreshLomba.setBackground(new java.awt.Color(0, 102, 0));
        btnRefreshLomba.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefreshLomba.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshLomba.setText("Refresh");
        btnRefreshLomba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshLombaActionPerformed(evt);
            }
        });
        boxRefresh_DaftarLomba.add(btnRefreshLomba);

        boxField_DaftarLomba.add(boxRefresh_DaftarLomba, java.awt.BorderLayout.PAGE_START);

        boxBtn_DaftarLomba.setBackground(new java.awt.Color(255, 255, 255));
        boxBtn_DaftarLomba.setPreferredSize(new java.awt.Dimension(100, 35));

        btnAddLomba.setBackground(new java.awt.Color(0, 102, 0));
        btnAddLomba.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddLomba.setForeground(new java.awt.Color(255, 255, 255));
        btnAddLomba.setText("Tambah");
        btnAddLomba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLombaActionPerformed(evt);
            }
        });
        boxBtn_DaftarLomba.add(btnAddLomba);

        btnEditLomba.setBackground(new java.awt.Color(0, 102, 0));
        btnEditLomba.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditLomba.setForeground(new java.awt.Color(255, 255, 255));
        btnEditLomba.setText("Edit");
        btnEditLomba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditLombaActionPerformed(evt);
            }
        });
        boxBtn_DaftarLomba.add(btnEditLomba);

        btnHapusLomba.setBackground(new java.awt.Color(0, 102, 0));
        btnHapusLomba.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHapusLomba.setForeground(new java.awt.Color(255, 255, 255));
        btnHapusLomba.setText("Hapus");
        btnHapusLomba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusLombaActionPerformed(evt);
            }
        });
        boxBtn_DaftarLomba.add(btnHapusLomba);

        boxField_DaftarLomba.add(boxBtn_DaftarLomba, java.awt.BorderLayout.PAGE_END);

        boxCRUD_DaftarLomba.setBackground(new java.awt.Color(255, 255, 255));
        boxCRUD_DaftarLomba.setLayout(new java.awt.GridBagLayout());

        namaLombalabelLomba.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        namaLombalabelLomba.setForeground(new java.awt.Color(0, 102, 0));
        namaLombalabelLomba.setText("Nama Lomba");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarLomba.add(namaLombalabelLomba, gridBagConstraints);

        namaLombaField.setBackground(new java.awt.Color(0, 102, 0));
        namaLombaField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        namaLombaField.setForeground(new java.awt.Color(255, 255, 255));
        namaLombaField.setPreferredSize(new java.awt.Dimension(200, 35));
        namaLombaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaLombaFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarLomba.add(namaLombaField, gridBagConstraints);

        kuotaLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        kuotaLabel.setForeground(new java.awt.Color(0, 102, 0));
        kuotaLabel.setText("Kouta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarLomba.add(kuotaLabel, gridBagConstraints);

        kuotaField.setBackground(new java.awt.Color(0, 102, 0));
        kuotaField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        kuotaField.setForeground(new java.awt.Color(255, 255, 255));
        kuotaField.setPreferredSize(new java.awt.Dimension(200, 35));
        kuotaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kuotaFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxCRUD_DaftarLomba.add(kuotaField, gridBagConstraints);

        boxField_DaftarLomba.add(boxCRUD_DaftarLomba, java.awt.BorderLayout.CENTER);

        boxPaneltabel7.add(boxField_DaftarLomba, java.awt.BorderLayout.EAST);

        boxPerkembanganpeserta7.add(boxPaneltabel7, java.awt.BorderLayout.CENTER);

        rightPanelLomba.add(boxPerkembanganpeserta7, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelLomba, "card4");

        rightPanelRekap.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelRekap.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelRekap.setLayout(new java.awt.BorderLayout());

        headerNavbar8.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar8.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar8.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar8.setLayout(new java.awt.BorderLayout());

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Rekap Nilai");
        headerNavbar8.add(jLabel17, java.awt.BorderLayout.CENTER);

        rightPanelRekap.add(headerNavbar8, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta8.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta8.setOpaque(false);
        boxPerkembanganpeserta8.setPreferredSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta8.setLayout(new java.awt.BorderLayout());

        boxPaneltabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 20, 20));
        boxPaneltabel8.setOpaque(false);
        boxPaneltabel8.setLayout(new java.awt.BorderLayout());

        jScrollPane11.setMinimumSize(new java.awt.Dimension(825, 275));

        tabelRekapNilai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nama Peserta", "Nama Lomba", "Total Nilai"
            }
        ));
        tabelRekapNilai.setMinimumSize(new java.awt.Dimension(825, 275));
        tabelRekapNilai.setPreferredSize(new java.awt.Dimension(825, 275));
        tabelRekapNilai.setRowHeight(25);
        tabelRekapNilai.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelRekapNilai.setShowGrid(true);
        jScrollPane11.setViewportView(tabelRekapNilai);

        boxPaneltabel8.add(jScrollPane11, java.awt.BorderLayout.CENTER);

        boxPerkembanganpeserta8.add(boxPaneltabel8, java.awt.BorderLayout.CENTER);

        panelBoxRekap.setMinimumSize(new java.awt.Dimension(850, 60));
        panelBoxRekap.setOpaque(false);
        panelBoxRekap.setPreferredSize(new java.awt.Dimension(850, 60));
        panelBoxRekap.setLayout(new java.awt.GridBagLayout());

        btnEksporPDF.setBackground(new java.awt.Color(0, 102, 0));
        btnEksporPDF.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEksporPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnEksporPDF.setText("Ekspor PDF");
        btnEksporPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEksporPDFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 0);
        panelBoxRekap.add(btnEksporPDF, gridBagConstraints);

        labelSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelSearch.setForeground(new java.awt.Color(0, 102, 0));
        labelSearch.setText("Cari");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 250, 0, 15);
        panelBoxRekap.add(labelSearch, gridBagConstraints);

        fieldCariRekap.setBackground(new java.awt.Color(0, 102, 0));
        fieldCariRekap.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fieldCariRekap.setForeground(new java.awt.Color(255, 255, 255));
        fieldCariRekap.setMinimumSize(new java.awt.Dimension(200, 40));
        fieldCariRekap.setPreferredSize(new java.awt.Dimension(200, 40));
        fieldCariRekap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCariRekapActionPerformed(evt);
            }
        });
        fieldCariRekap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldCariRekapKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        panelBoxRekap.add(fieldCariRekap, gridBagConstraints);

        btnRefreshRekapNilai.setBackground(new java.awt.Color(0, 102, 0));
        btnRefreshRekapNilai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefreshRekapNilai.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshRekapNilai.setText("Refresh");
        btnRefreshRekapNilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshRekapNilaiActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        panelBoxRekap.add(btnRefreshRekapNilai, gridBagConstraints);

        boxPerkembanganpeserta8.add(panelBoxRekap, java.awt.BorderLayout.NORTH);

        rightPanelRekap.add(boxPerkembanganpeserta8, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelRekap, "card4");

        rightPanelJuara.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelJuara.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelJuara.setLayout(new java.awt.BorderLayout());

        headerNavbar9.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar9.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar9.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar9.setLayout(new java.awt.BorderLayout());

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Daftar Juara");
        headerNavbar9.add(jLabel18, java.awt.BorderLayout.CENTER);

        rightPanelJuara.add(headerNavbar9, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta9.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta9.setOpaque(false);
        boxPerkembanganpeserta9.setPreferredSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta9.setLayout(new java.awt.BorderLayout());

        boxPaneltabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 20, 20));
        boxPaneltabel9.setOpaque(false);
        boxPaneltabel9.setLayout(new java.awt.BorderLayout());

        jScrollPane12.setMinimumSize(new java.awt.Dimension(825, 275));

        tabelJuara.setForeground(new java.awt.Color(0, 0, 0));
        tabelJuara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No.", "Nama Peserta", "Nama Lomba", "Total Nilai", "Juara"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelJuara.setMinimumSize(new java.awt.Dimension(825, 275));
        tabelJuara.setPreferredSize(new java.awt.Dimension(825, 275));
        tabelJuara.setRowHeight(25);
        tabelJuara.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelJuara.setShowGrid(true);
        jScrollPane12.setViewportView(tabelJuara);
        if (tabelJuara.getColumnModel().getColumnCount() > 0) {
            tabelJuara.getColumnModel().getColumn(0).setMinWidth(40);
            tabelJuara.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelJuara.getColumnModel().getColumn(1).setMinWidth(350);
            tabelJuara.getColumnModel().getColumn(1).setMaxWidth(350);
            tabelJuara.getColumnModel().getColumn(4).setMinWidth(100);
            tabelJuara.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        boxPaneltabel9.add(jScrollPane12, java.awt.BorderLayout.CENTER);

        boxPerkembanganpeserta9.add(boxPaneltabel9, java.awt.BorderLayout.CENTER);

        boxBtnJuara.setMinimumSize(new java.awt.Dimension(850, 50));
        boxBtnJuara.setOpaque(false);
        boxBtnJuara.setPreferredSize(new java.awt.Dimension(850, 50));
        boxBtnJuara.setLayout(new java.awt.GridBagLayout());

        RefreshBtnJuara.setBackground(new java.awt.Color(0, 102, 0));
        RefreshBtnJuara.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RefreshBtnJuara.setForeground(new java.awt.Color(255, 255, 255));
        RefreshBtnJuara.setText("Refresh");
        RefreshBtnJuara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshBtnJuaraActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        boxBtnJuara.add(RefreshBtnJuara, gridBagConstraints);

        eksporPDFJuara.setBackground(new java.awt.Color(0, 102, 0));
        eksporPDFJuara.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eksporPDFJuara.setForeground(new java.awt.Color(255, 255, 255));
        eksporPDFJuara.setText("Ekspor PDF ");
        eksporPDFJuara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eksporPDFJuaraActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 570);
        boxBtnJuara.add(eksporPDFJuara, gridBagConstraints);

        boxPerkembanganpeserta9.add(boxBtnJuara, java.awt.BorderLayout.NORTH);

        rightPanelJuara.add(boxPerkembanganpeserta9, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelJuara, "card4");

        rightPanelAspek.setBackground(new java.awt.Color(255, 255, 255));
        rightPanelAspek.setMinimumSize(new java.awt.Dimension(850, 475));
        rightPanelAspek.setLayout(new java.awt.BorderLayout());

        headerNavbar10.setBackground(new java.awt.Color(0, 102, 0));
        headerNavbar10.setMinimumSize(new java.awt.Dimension(850, 50));
        headerNavbar10.setPreferredSize(new java.awt.Dimension(850, 50));
        headerNavbar10.setLayout(new java.awt.BorderLayout());

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Aspek Penilaian");
        headerNavbar10.add(jLabel19, java.awt.BorderLayout.CENTER);

        rightPanelAspek.add(headerNavbar10, java.awt.BorderLayout.NORTH);

        boxPerkembanganpeserta10.setMinimumSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta10.setOpaque(false);
        boxPerkembanganpeserta10.setPreferredSize(new java.awt.Dimension(825, 275));
        boxPerkembanganpeserta10.setLayout(new java.awt.BorderLayout());

        boxPaneltabel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        boxPaneltabel10.setOpaque(false);
        boxPaneltabel10.setLayout(new java.awt.BorderLayout());

        boxTabel_AspekPenilaian.setBackground(new java.awt.Color(255, 255, 255));
        boxTabel_AspekPenilaian.setPreferredSize(new java.awt.Dimension(500, 100));
        boxTabel_AspekPenilaian.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setMinimumSize(null);

        tabelAspek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Nama Aspek Penilaian", "Lomba", "Presentase"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelAspek.setRowHeight(25);
        tabelAspek.setSelectionBackground(new java.awt.Color(51, 153, 0));
        tabelAspek.setShowGrid(true);
        jScrollPane1.setViewportView(tabelAspek);
        if (tabelAspek.getColumnModel().getColumnCount() > 0) {
            tabelAspek.getColumnModel().getColumn(0).setMinWidth(40);
            tabelAspek.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelAspek.getColumnModel().getColumn(3).setMinWidth(75);
            tabelAspek.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        boxTabel_AspekPenilaian.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        boxPaneltabel10.add(boxTabel_AspekPenilaian, java.awt.BorderLayout.CENTER);

        box_AspekPenilaian.setBackground(new java.awt.Color(255, 255, 255));
        box_AspekPenilaian.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 25, 1, 1));
        box_AspekPenilaian.setMinimumSize(new java.awt.Dimension(310, 385));
        box_AspekPenilaian.setPreferredSize(new java.awt.Dimension(310, 385));
        box_AspekPenilaian.setLayout(new java.awt.BorderLayout());

        boxRefresh_AspekPenilaian.setPreferredSize(new java.awt.Dimension(100, 35));
        boxRefresh_AspekPenilaian.setLayout(new java.awt.CardLayout());

        btnRefreshAspek.setBackground(new java.awt.Color(0, 153, 0));
        btnRefreshAspek.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRefreshAspek.setForeground(new java.awt.Color(255, 255, 255));
        btnRefreshAspek.setText("Refresh");
        btnRefreshAspek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshAspekActionPerformed(evt);
            }
        });
        boxRefresh_AspekPenilaian.add(btnRefreshAspek, "card2");

        box_AspekPenilaian.add(boxRefresh_AspekPenilaian, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 35));

        btnAddAspek.setBackground(new java.awt.Color(0, 102, 0));
        btnAddAspek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddAspek.setForeground(new java.awt.Color(255, 255, 255));
        btnAddAspek.setText("Tambah");
        btnAddAspek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAspekActionPerformed(evt);
            }
        });
        jPanel3.add(btnAddAspek);

        btnEditAspek.setBackground(new java.awt.Color(0, 102, 0));
        btnEditAspek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditAspek.setForeground(new java.awt.Color(255, 255, 255));
        btnEditAspek.setText("Edit");
        btnEditAspek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditAspekActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditAspek);

        btnDeleteAspek.setBackground(new java.awt.Color(0, 102, 0));
        btnDeleteAspek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDeleteAspek.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteAspek.setText("Hapus");
        btnDeleteAspek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAspekActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeleteAspek);

        box_AspekPenilaian.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        boxField_AspekPenilaian.setBackground(new java.awt.Color(255, 255, 255));
        boxField_AspekPenilaian.setLayout(new java.awt.GridBagLayout());

        labelAspek.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelAspek.setForeground(new java.awt.Color(0, 102, 0));
        labelAspek.setText("Nama Aspek Penilaian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(labelAspek, gridBagConstraints);

        namaAspekfield.setBackground(new java.awt.Color(0, 102, 0));
        namaAspekfield.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        namaAspekfield.setForeground(new java.awt.Color(255, 255, 255));
        namaAspekfield.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(namaAspekfield, gridBagConstraints);

        lombaLabelAspek.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lombaLabelAspek.setForeground(new java.awt.Color(0, 102, 51));
        lombaLabelAspek.setText("Lomba");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(lombaLabelAspek, gridBagConstraints);

        presentaseLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        presentaseLabel.setForeground(new java.awt.Color(0, 102, 0));
        presentaseLabel.setText("Presentase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(presentaseLabel, gridBagConstraints);

        presentaseField.setBackground(new java.awt.Color(0, 102, 0));
        presentaseField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        presentaseField.setForeground(new java.awt.Color(255, 255, 255));
        presentaseField.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(presentaseField, gridBagConstraints);

        comboboxLombaAspek.setBackground(new java.awt.Color(0, 102, 0));
        comboboxLombaAspek.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        comboboxLombaAspek.setForeground(new java.awt.Color(255, 255, 255));
        comboboxLombaAspek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboboxLombaAspek.setMinimumSize(new java.awt.Dimension(200, 35));
        comboboxLombaAspek.setPreferredSize(new java.awt.Dimension(200, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        boxField_AspekPenilaian.add(comboboxLombaAspek, gridBagConstraints);

        box_AspekPenilaian.add(boxField_AspekPenilaian, java.awt.BorderLayout.CENTER);

        boxPaneltabel10.add(box_AspekPenilaian, java.awt.BorderLayout.EAST);

        boxPerkembanganpeserta10.add(boxPaneltabel10, java.awt.BorderLayout.CENTER);

        rightPanelAspek.add(boxPerkembanganpeserta10, java.awt.BorderLayout.CENTER);

        kontenPanel.add(rightPanelAspek, "card4");

        jSplitPanePanitia.setRightComponent(kontenPanel);

        bgDashboardPanit.add(jSplitPanePanitia, java.awt.BorderLayout.CENTER);

        getContentPane().add(bgDashboardPanit, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void statistikPesertaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statistikPesertaMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_statistikPesertaMouseClicked

    private void statistikPesertaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statistikPesertaMousePressed
        // TODO add your handling code here:
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba);
        rightpanelStatistik.setVisible(true);
        rightPanelJuri.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelRekap.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        statistikPeserta.setBackground(new Color(0,76,6));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        aspekLomba.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
        
        
    }//GEN-LAST:event_statistikPesertaMousePressed

    private void daftarJuriMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarJuriMousePressed
        // TODO add your handling code here:
        tampilkanDataJuri();
        rightPanelJuri.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelRekap.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        daftarJuri.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        aspekLomba.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
    }//GEN-LAST:event_daftarJuriMousePressed

    private void daftarPesertaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarPesertaMousePressed
        // TODO add your handling code here:
        tampilkanPeserta();
        pesertaController.isiComboBoxLomba(comboboxLombaPeserta);
        
        rightPanelPeserta.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelJuri.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelRekap.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        daftarPeserta.setBackground(new Color(0,76,6));
        aspekLomba.setBackground(new Color(0,102,0));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
        
    }//GEN-LAST:event_daftarPesertaMousePressed

    private void daftarLombaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarLombaMousePressed
        // TODO add your handling code here:
        tampilkanLomba();
        rightPanelLomba.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelJuri.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelRekap.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        
        daftarLomba.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        aspekLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
    }//GEN-LAST:event_daftarLombaMousePressed

    private void rekapNilaiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rekapNilaiMousePressed
        // TODO add your handling code here:
        tampilkanRekapNilai();
        rightPanelRekap.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelJuri.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        rekapNilai.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        aspekLomba.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
        
        
    }//GEN-LAST:event_rekapNilaiMousePressed

    private void daftarJuaraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_daftarJuaraMousePressed
        // TODO add your handling code here:
        tampilkanJuara();
        rightPanelJuara.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelJuri.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelAspek.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelRekap.setVisible(false);
        
        daftarJuara.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        aspekLomba.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
    }//GEN-LAST:event_daftarJuaraMousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        if (!Session.isLoggedIn() || !"panitia".equalsIgnoreCase(Session.getCurrentUser().getRole())) {
            JOptionPane.showMessageDialog(this, "Silakan login terlebih dahulu sebagai panitia.");
            dispose();
            new login_fix().setVisible(true);
        }

        tampilkanDataJuri();
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba);
        tampilkanPeserta();
        tampilkanLomba();
        tampilkanAspekPenilaian();
        tampilkanJuara();
        tampilkanRekapNilai();

    }//GEN-LAST:event_formWindowOpened

    private void fieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNamaActionPerformed

    private void addJuriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJuriActionPerformed
        String nama = fieldNama.getText().trim();
        String username = fieldUsername.getText().trim();
        String password = new String(fieldPassword.getPassword()).trim();

        if (username.isEmpty() || password.isEmpty() || nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field wajib diisi.", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }

        model.Juri juri = new model.Juri();
        juri.setUsername(username);
        juri.setPassword(password);
        juri.setNama(nama);

        controller.juriController controller = new controller.juriController();
        boolean success = controller.tambahJuri(juri);

        if (success) {
            JOptionPane.showMessageDialog(this, "Juri berhasil ditambahkan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            fieldNama.setText("");
            fieldUsername.setText("");
            fieldPassword.setText("");
            tampilkanDataJuri();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan juri.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addJuriActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        tampilkanDataJuri();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void logoutPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutPanelMousePressed

    private void logoutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Apakah Anda yakin ingin logout?",
            "Konfirmasi Logout",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            Session.clearSession();
            this.dispose();
            new login_fix().setVisible(true);
        }
    }//GEN-LAST:event_logoutPanelMouseClicked

    private void refreshBtnStatistikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnStatistikActionPerformed
        // TODO add your handling code here:
        statistikController.tampilkanStatistik(totalPesertatxt, totalJuritxt, totalLombatxt);
        statistikController.tampilkanTabelStatistikPeserta(tabelStatistikLomba);
        
    }//GEN-LAST:event_refreshBtnStatistikActionPerformed

    private void editJuriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editJuriActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelJuri.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data juri yang ingin diedit.");
            return;
        }

        String nama = (String) tabelJuri.getValueAt(selectedRow, 0);
        String username = (String) tabelJuri.getValueAt(selectedRow, 1);
        String password = (String) tabelJuri.getValueAt(selectedRow, 2);

        String newNama = JOptionPane.showInputDialog(this, "Edit Nama Juri:", nama);
        String newUsername = JOptionPane.showInputDialog(this, "Edit Username Juri:", username);
        String newPassword = JOptionPane.showInputDialog(this, "Edit Password Juri:", password);

        if (newNama == null || newUsername == null || newPassword == null) return;

        juriController jc = new juriController();
        List<Juri> listJuri = jc.getAllJuri();
        int id = listJuri.get(selectedRow).getId();

        Juri j = new Juri(id, newUsername, newPassword, newNama, "juri");
        if (jc.updateJuri(j)) {
            JOptionPane.showMessageDialog(this, "Data juri berhasil diupdate.");
            tampilkanDataJuri();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate data juri.");
        }
    }//GEN-LAST:event_editJuriActionPerformed

    private void delJuriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delJuriActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelJuri.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data juri yang ingin dihapus.");
            return;
        }

        int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data juri ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi == JOptionPane.YES_OPTION) {
            juriController jc = new juriController();
            List<Juri> listJuri = jc.getAllJuri();
            int id = listJuri.get(selectedRow).getId();

            if (jc.deleteJuri(id)) {
                JOptionPane.showMessageDialog(this, "Data juri berhasil dihapus.");
                tampilkanDataJuri();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data juri.");
            }
        }
    }//GEN-LAST:event_delJuriActionPerformed

    private void aspekLombaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aspekLombaMousePressed
        // TODO add your handling code here:
        pesertaController.isiComboBoxLomba(comboboxLombaAspek);
        tampilkanAspekPenilaian();
        rightPanelAspek.setVisible(true);
        rightpanelStatistik.setVisible(false);
        rightPanelJuri.setVisible(false);
        rightPanelPeserta.setVisible(false);
        rightPanelLomba.setVisible(false);
        rightPanelRekap.setVisible(false);
        rightPanelJuara.setVisible(false);
        
        aspekLomba.setBackground(new Color(0,76,6));
        statistikPeserta.setBackground(new Color(0,102,0));
        daftarJuri.setBackground(new Color(0,102,0));
        daftarPeserta.setBackground(new Color(0,102,0));
        daftarLomba.setBackground(new Color(0,102,0));
        rekapNilai.setBackground(new Color(0,102,0));
        daftarJuara.setBackground(new Color(0,102,0));
    }//GEN-LAST:event_aspekLombaMousePressed

    private void btnAddAspekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAspekActionPerformed
        // TODO add your handling code here:
        
        String namaAspek = namaAspekfield.getText().trim();
        String namaLomba = (String) comboboxLombaAspek.getSelectedItem();
        String presentaseText = presentaseField.getText().trim();

        if (namaAspek.isEmpty() || namaLomba == null || presentaseText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int presentase;
        try {
            presentase = Integer.parseInt(presentaseText);
            if (presentase < 1 || presentase > 100) {
                JOptionPane.showMessageDialog(this, "Presentase harus antara 1-100.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Presentase harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DaftarpesertaController lombaController = new DaftarpesertaController();
        Lomba lomba = lombaController.getLombaByNama(namaLomba);
        if (lomba == null) {
            JOptionPane.showMessageDialog(this, "Lomba tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        AspekPenilaian aspek = new AspekPenilaian(
            0,
            lomba.getIdLomba(),
            namaAspek,
            lomba.getNamaLomba(),
            presentase
        );

        AspekPenilaianController aspekController = new AspekPenilaianController();

        boolean sukses = aspekController.tambahAspek(aspek);
        if (sukses) {
            JOptionPane.showMessageDialog(this, "Aspek penilaian berhasil ditambahkan.");
            namaAspekfield.setText("");
            presentaseField.setText("");
            tampilkanAspekPenilaian();
        } else {
            JOptionPane.showMessageDialog(this, "Total presentase aspek melebihi 100%!", "Gagal", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnAddAspekActionPerformed

    private void btnEditAspekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditAspekActionPerformed

        int selectedRow = tabelAspek.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih aspek yang ingin diedit.");
            return;
        }

        
        AspekPenilaian aspekLama = listAspekTabel.get(selectedRow);
        int idAspek = aspekLama.getIdAspek(); 
        String namaLama = aspekLama.getNamaAspek();
        String namaLombaLama = aspekLama.getNamaLomba();
        String presentaseLamaStr = String.valueOf(aspekLama.getPresentase());

        // Input nama aspek
        String namaBaru = JOptionPane.showInputDialog(this, "Edit Nama Aspek:", namaLama);
        if (namaBaru == null || namaBaru.trim().isEmpty()) return;



        DaftarpesertaController lombaController = new DaftarpesertaController();
        List<Lomba> daftarLomba = lombaController.getSemuaLomba();

        if (daftarLomba == null || daftarLomba.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tidak ada data lomba yang tersedia.");
            return;
        }

        // Ambil nama-namanya
        String[] pilihanLomba = daftarLomba.stream()
                .map(Lomba::getNamaLomba)
                .toArray(String[]::new);

        // Tampilkan combo box di JOptionPane
        String namaLombaBaru = (String) JOptionPane.showInputDialog(
            this,
            "Pilih Lomba Baru:",
            "Edit Lomba",
            JOptionPane.PLAIN_MESSAGE,
            null,
            pilihanLomba,
            namaLombaLama
        );

        if (namaLombaBaru == null || namaLombaBaru.trim().isEmpty()) return;

        Lomba lombaBaru = lombaController.getLombaByNama(namaLombaBaru);
        if (lombaBaru == null) {
            JOptionPane.showMessageDialog(this, "Lomba tidak ditemukan!");
            return;
        }

        
        String presentaseStr = JOptionPane.showInputDialog(this, "Edit Presentase:", presentaseLamaStr);
        if (presentaseStr == null || presentaseStr.trim().isEmpty()) return;

        int presentase;
        try {
            presentase = Integer.parseInt(presentaseStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Presentase harus berupa angka!");
            return;
        }

        // Buat objek aspek baru
        AspekPenilaian aspek = new AspekPenilaian(
            idAspek,
            lombaBaru.getIdLomba(),
            namaBaru,
            namaLombaBaru,
            presentase
        );

        AspekPenilaianController aspekController = new AspekPenilaianController();
        boolean sukses = aspekController.editAspek(aspek);

        if (sukses) {
            JOptionPane.showMessageDialog(this, "Aspek berhasil diupdate.");
            tampilkanAspekPenilaian();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui aspek.");
        }

    }//GEN-LAST:event_btnEditAspekActionPerformed

    private void btnDeleteAspekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAspekActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelAspek.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih aspek yang ingin dihapus.");
            return;
        }

        int konfirmasi = JOptionPane.showConfirmDialog(
            this,
            "Apakah Anda yakin ingin menghapus aspek ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION
        );

        if (konfirmasi != JOptionPane.YES_OPTION) {
            return;
        }

        
        int idAspek = listAspekTabel.get(selectedRow).getIdAspek();
        AspekPenilaianController aspekController = new AspekPenilaianController();
        boolean sukses = aspekController.hapusAspek(idAspek);

        if (sukses) {
            JOptionPane.showMessageDialog(this, "Aspek berhasil dihapus.");
            tampilkanAspekPenilaian();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus aspek.");
        }
    }//GEN-LAST:event_btnDeleteAspekActionPerformed

    private void btnHapusPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusPesertaActionPerformed
        // TODO add your handling code here:
            int selectedRow = tabelPeserta.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Pilih peserta yang ingin dihapus terlebih dahulu.");
                return;
            }

            Peserta peserta = listPesertaTabel.get(selectedRow);

            int konfirmasi = JOptionPane.showConfirmDialog(
                this,
                "Apakah Anda yakin ingin menghapus peserta \"" + peserta.getNamaPeserta() + "\"?",
                "Konfirmasi Hapus",
                JOptionPane.YES_NO_OPTION
            );

            if (konfirmasi == JOptionPane.YES_OPTION) {
                boolean sukses = pesertaController.deletePeserta(peserta.getIdPeserta());
                if (sukses) {
                    JOptionPane.showMessageDialog(this, "Peserta berhasil dihapus.");
                    tampilkanPeserta();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus peserta.");
                }
            }
    }//GEN-LAST:event_btnHapusPesertaActionPerformed

    private void btnRefreshPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPesertaActionPerformed
        // TODO add your handling code here:
        tampilkanPeserta();
        pesertaController.isiComboBoxLomba(comboboxLombaPeserta);
    }//GEN-LAST:event_btnRefreshPesertaActionPerformed

    private void btnImportPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportPesertaActionPerformed
        // TODO add your handling code here:

        // JFileChooser fileChooser = new JFileChooser();
        // int pilihan = fileChooser.showOpenDialog(this);

        // if (pilihan == JFileChooser.APPROVE_OPTION) {
        //     File file = fileChooser.getSelectedFile();
        //     boolean sukses = pesertaController.importPesertaDariCSV(file);

        //     if (sukses) {
        //         JOptionPane.showMessageDialog(this, "Import berhasil.");
        //         tampilkanPeserta();
        //     } else {
        //         JOptionPane.showMessageDialog(this, "Gagal mengimpor file.");
        //     }
        // }

        JFileChooser fileChooser = new JFileChooser();
        int pilihan = fileChooser.showOpenDialog(this);

        if (pilihan == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String hasilImport = pesertaController.importPesertaDariCSV(file);

            if (hasilImport.equals("SUKSES")) {
                JOptionPane.showMessageDialog(this, "Import berhasil.");
            } else if (hasilImport.startsWith("ERROR")) {
                JOptionPane.showMessageDialog(this, "Gagal mengimpor file:\n" + hasilImport);
            } else {
                JOptionPane.showMessageDialog(this, hasilImport); // tampilkan baris yang gagal
            }

            tampilkanPeserta(); // tetap tampilkan peserta meski sebagian gagal
    }
    }//GEN-LAST:event_btnImportPesertaActionPerformed

    private void btnEditLombaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditLombaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelLomba.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih lomba yang ingin diedit.");
            return;
        }

        Lomba lombaLama = listLombaTabel.get(selectedRow);
        String namaBaru = JOptionPane.showInputDialog(this, "Masukkan nama lomba baru:", lombaLama.getNamaLomba());
        if (namaBaru == null || namaBaru.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong.");
            return;
        }

        String kuotaStr = JOptionPane.showInputDialog(this, "Masukkan kuota baru:", lombaLama.getKuota());
        if (kuotaStr == null || kuotaStr.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kuota tidak boleh kosong.");
            return;
        }


        if (namaBaru.isEmpty() || kuotaStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama dan kuota tidak boleh kosong.");
            return;
        }

        try {
            int kuotaBaru = Integer.parseInt(kuotaStr);
            Lomba lombaBaru = new Lomba(lombaLama.getId(), namaBaru, kuotaBaru);
            if (daftarLombaController.editLomba(lombaLama.getId(), lombaBaru)) {
                JOptionPane.showMessageDialog(this, "Lomba berhasil diedit.");
                tampilkanLomba();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengedit lomba.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Kuota harus berupa angka.");
        }
    }//GEN-LAST:event_btnEditLombaActionPerformed

    private void fieldNamaPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNamaPesertaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNamaPesertaActionPerformed

    private void kuotaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kuotaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kuotaFieldActionPerformed

    private void namaLombaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaLombaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaLombaFieldActionPerformed

    private void btnRefreshLombaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshLombaActionPerformed
        // TODO add your handling code here:
        tampilkanLomba();
    }//GEN-LAST:event_btnRefreshLombaActionPerformed

    private void fieldCariPesertaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCariPesertaKeyReleased
        // TODO add your handling code here:
//        pesertaController.cariPeserta(tabelPeserta, fieldCariPeserta.getText());
    }//GEN-LAST:event_fieldCariPesertaKeyReleased

    private void fieldCariPesertaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCariPesertaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            pesertaController.cariPeserta(tabelPeserta, fieldCariPeserta.getText());
        }
    }//GEN-LAST:event_fieldCariPesertaKeyPressed

    private void btnAddPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPesertaActionPerformed
        // TODO add your handling code here:

        String nama = fieldNamaPeserta.getText();
        String asal = fieldAsalPeserta.getText();
        String namaLomba = (String) comboboxLombaPeserta.getSelectedItem();

        // Validasi input
        if (nama.isEmpty() || asal.isEmpty() || namaLomba == null || namaLomba.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Lomba lombaDipilih = pesertaController.getLombaByNama(namaLomba);
        Peserta peserta = new Peserta(nama, lombaDipilih, asal);

        // simpan ke database
        boolean sukses = pesertaController.tambahPeserta(peserta);
        if (sukses) {
            JOptionPane.showMessageDialog(this, "Peserta berhasil ditambahkan.");
            fieldNamaPeserta.setText("");
            fieldAsalPeserta.setText("");
            tampilkanPeserta();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan peserta.");
        }

    }//GEN-LAST:event_btnAddPesertaActionPerformed

    private void btnEditPesertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPesertaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelPeserta.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih peserta terlebih dahulu.");
            return;
        }

        Peserta pesertaLama = listPesertaTabel.get(selectedRow);
        String namaLama = pesertaLama.getNamaPeserta();
        String asalLama = pesertaLama.getAsal();
        String namaLombaLama = pesertaLama.getLomba().getNamaLomba();

        String namaBaru = JOptionPane.showInputDialog(this, "Edit Nama Peserta:", namaLama);
        if (namaBaru == null) return;

        String asalBaru = JOptionPane.showInputDialog(this, "Edit Asal Peserta:", asalLama);
        if (asalBaru == null) return;

        // Pilih lomba
        List<Lomba> daftarLomba = pesertaController.getSemuaLomba();
        String[] pilihanLomba = daftarLomba.stream().map(Lomba::getNamaLomba).toArray(String[]::new);
        String namaLombaBaru = (String) JOptionPane.showInputDialog(
            this,
            "Pilih Lomba Baru:",
            "Edit Lomba",
            JOptionPane.PLAIN_MESSAGE,
            null,
            pilihanLomba,
            namaLombaLama
        );
        if (namaLombaBaru == null) return;

        Lomba lombaBaru = pesertaController.getLombaByNama(namaLombaBaru);
        if (lombaBaru == null) {
            JOptionPane.showMessageDialog(this, "Lomba tidak ditemukan!");
            return;
        }

        Peserta pesertaBaru = new Peserta(namaBaru, lombaBaru, asalBaru);
        int idPeserta = pesertaLama.getIdPeserta();

        boolean sukses = pesertaController.editPeserta(idPeserta, pesertaBaru);
        if (sukses) {
            JOptionPane.showMessageDialog(this, "Data peserta berhasil diupdate.");
            tampilkanPeserta();
        } else {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui data peserta.");
        }

    }//GEN-LAST:event_btnEditPesertaActionPerformed

    private void btnAddLombaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLombaActionPerformed
        // TODO add your handling code here:
            String nama = namaLombaField.getText();
            String kuotaStr = kuotaField.getText();

            if (nama.isEmpty() || kuotaStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama lomba dan kuota tidak boleh kosong.");
                return;
            }

            try {
                int kuota = Integer.parseInt(kuotaStr);
                Lomba lombaBaru = new Lomba(0, nama, kuota);
                if (daftarLombaController.tambahLomba(lombaBaru)) {
                    JOptionPane.showMessageDialog(this, "Lomba berhasil ditambahkan.");
                    namaLombaField.setText("");
                    kuotaField.setText("");
                    tampilkanLomba();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menambahkan lomba.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Kuota harus berupa angka.");
            }
    }//GEN-LAST:event_btnAddLombaActionPerformed

    private void btnHapusLombaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusLombaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelLomba.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih lomba yang ingin dihapus.");
            return;
        }

        Lomba lomba = listLombaTabel.get(selectedRow);
        int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus lomba ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

        if (konfirmasi == JOptionPane.YES_OPTION) {
            if (daftarLombaController.hapusLomba(lomba.getId())) {
                JOptionPane.showMessageDialog(this, "Lomba berhasil dihapus.");
                tampilkanLomba();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus lomba.");
            }
        }
    }//GEN-LAST:event_btnHapusLombaActionPerformed

    private void btnRefreshAspekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshAspekActionPerformed
        // TODO add your handling code here:
        tampilkanAspekPenilaian();
    }//GEN-LAST:event_btnRefreshAspekActionPerformed

    private void RefreshBtnJuaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshBtnJuaraActionPerformed
         tampilkanJuara();
        // TODO add your handling code here:
    }//GEN-LAST:event_RefreshBtnJuaraActionPerformed

    private void fieldCariRekapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCariRekapKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariRekapKeyPressed

    private void fieldCariRekapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCariRekapActionPerformed
       
            String keyword = fieldCariRekap.getText().trim();
            rekapNilaiController controller = new rekapNilaiController();
            
            List<rekapNilaiController.RekapNilaiData> hasil = controller.searchRekapNilai(keyword);
            
            DefaultTableModel model = (DefaultTableModel) tabelRekapNilai.getModel();
            model.setRowCount(0);
            
            for (rekapNilaiController.RekapNilaiData data : hasil){
                Object[] row = { data.nama_peserta, data.nama_lomba, data.totalNilai
            };
                model.addRow(row);
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCariRekapActionPerformed

    private void btnEksporPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEksporPDFActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Simpan sebagai PDF");
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (!fileToSave.getAbsolutePath().endsWith(".pdf")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".pdf");
            }

            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream(fileToSave));
                document.open();

                document.add(new Paragraph("Daftar Juara Lomba MTQ"));
                document.add(new Paragraph(" "));
                PdfPTable pdfTable = new PdfPTable(tabelRekapNilai.getColumnCount());

                // Tambahkan header kolom
                for (int i = 0; i < tabelRekapNilai.getColumnCount(); i++) {
                    pdfTable.addCell(new PdfPCell(new Phrase(tabelRekapNilai.getColumnName(i))));
                }

                // Tambahkan baris data
                for (int row = 0; row < tabelRekapNilai.getRowCount(); row++) {
                    for (int col = 0; col < tabelRekapNilai.getColumnCount(); col++) {
                        Object value = tabelRekapNilai.getValueAt(row, col);
                        pdfTable.addCell(value != null ? value.toString() : "");
                    }
                }

                document.add(pdfTable);
                JOptionPane.showMessageDialog(this, "PDF berhasil disimpan di:\n" + fileToSave.getAbsolutePath());

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Gagal menyimpan PDF: " + e.getMessage());
            } finally {
                document.close();
            }
        }
    }//GEN-LAST:event_btnEksporPDFActionPerformed

    private void eksporPDFJuaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eksporPDFJuaraActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Simpan sebagai PDF");
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (!fileToSave.getAbsolutePath().endsWith(".pdf")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".pdf");
            }

            Document document = new Document();
            try {
                PdfWriter.getInstance(document, new FileOutputStream(fileToSave));
                document.open();

                document.add(new Paragraph("Daftar Rekap Nilai Lomba MTQ"));
                document.add(new Paragraph(" ")); 

                PdfPTable pdfTable = new PdfPTable(tabelJuara.getColumnCount());

                // Tambahkan header kolom
                for (int i = 0; i < tabelJuara.getColumnCount(); i++) {
                    pdfTable.addCell(new PdfPCell(new Phrase(tabelJuara.getColumnName(i))));
                }

                // Tambahkan baris data
                for (int row = 0; row < tabelJuara.getRowCount(); row++) {
                    for (int col = 0; col < tabelJuara.getColumnCount(); col++) {
                        Object value = tabelJuara.getValueAt(row, col);
                        pdfTable.addCell(value != null ? value.toString() : "");
                    }
                }

                document.add(pdfTable);
                JOptionPane.showMessageDialog(this, "PDF berhasil disimpan di:\n" + fileToSave.getAbsolutePath());

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Gagal menyimpan PDF: " + e.getMessage());
            } finally {
                document.close();
            }
        }
    }//GEN-LAST:event_eksporPDFJuaraActionPerformed

    private void btnRefreshRekapNilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshRekapNilaiActionPerformed
        // TODO add your handling code here:
        tampilkanRekapNilai();
    }//GEN-LAST:event_btnRefreshRekapNilaiActionPerformed


    public void tampilkanRekapNilai(){
        List<Integer> daftarPeserta = rekapNilaiController.getAllPesertaIDs();
    
        DefaultTableModel model = (DefaultTableModel) tabelRekapNilai.getModel();
        model.setRowCount(0);
    
        rekapNilaiController controller = new rekapNilaiController();
    
        for (int id_peserta : daftarPeserta) {
            String nama_peserta = rekapNilaiController.getNamaPeserta(id_peserta);
            String nama_lomba = rekapNilaiController.getNamaLombaByPeserta(id_peserta);
    
            rekapNilaiController.RekapNilaiData data = controller.getRekapNilai(id_peserta, 0); 
            double totalNilai = data.totalNilai; 
    
            Object[] row = { nama_peserta, nama_lomba, totalNilai };
            model.addRow(row);
        }

    }


    private void tampilkanDataJuri() {
    DefaultTableModel model = (DefaultTableModel) tabelJuri.getModel();
    model.setRowCount(0);

    juriController jc = new juriController();
    List<Juri> listJuri = jc.getAllJuri();

        for (Juri j : listJuri) {
            Object[] row = {
                j.getNama(),
                j.getUsername(),
                j.getPassword()
            };
            model.addRow(row);
        }
    }

    private void tampilkanPeserta() {
        listPesertaTabel = pesertaController.getSemuaPeserta();
        DefaultTableModel model = (DefaultTableModel) tabelPeserta.getModel();
        model.setRowCount(0);

        int no = 1;
        for (Peserta p : listPesertaTabel) {
            model.addRow(new Object[]{
                no++,
                p.getNamaPeserta(),
                p.getAsal(),
                p.getLomba().getNamaLomba()
            });
        }
    }

    private void tampilkanLomba(){
        listLombaTabel = daftarLombaController.getSemuaLomba();
        DefaultTableModel model = (DefaultTableModel) tabelLomba.getModel();
        model.setRowCount(0);

        for (Lomba lomba : listLombaTabel) {
            Object[] row = new Object[] {
                lomba.getNamaLomba(),
                lomba.getKuota()
            };
            model.addRow(row);
        }
    }

    public void tampilkanAspekPenilaian() {
        AspekPenilaianController controller = new AspekPenilaianController();
        listAspekTabel = controller.getSemuaAspek();
        DefaultTableModel model = (DefaultTableModel) tabelAspek.getModel();
        model.setRowCount(0);

        int no = 1;
        for (AspekPenilaian aspek : listAspekTabel) {
            model.addRow(new Object[] {
                no++,
                aspek.getNamaAspek(),
                aspek.getNamaLomba(),
                aspek.getPresentase()
            });
        }
    }




    private void tampilkanJuara() {
        List<Juara> daftarJuara = juaraController.getJuaraPerLomba();
        DefaultTableModel model = (DefaultTableModel) tabelJuara.getModel();
        model.setRowCount(0); 

        int no = 1;
        for (Juara j : daftarJuara) {
            model.addRow(new Object[]{
                no++,
                j.getNamaPeserta(),
                j.getNamaLomba(),
                j.getTotalNilai(),
                "Juara " + j.getJuara()
            });
        }

        tabelJuara.setModel(model);
    }










    




    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardPanitia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardPanitia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardPanitia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardPanitia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardPanitia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshBtnJuara;
    private javax.swing.JButton addJuri;
    private javax.swing.JPanel aspekLomba;
    private javax.swing.JPanel bgDashboardPanit;
    private javax.swing.JPanel boxActJuri;
    private javax.swing.JPanel boxBtnJuara;
    private javax.swing.JPanel boxBtnJuriAct;
    private javax.swing.JPanel boxBtn_DaftarLomba;
    private javax.swing.JPanel boxBtn_DaftarPeserta;
    private javax.swing.JPanel boxCRUD_DaftarLomba;
    private javax.swing.JPanel boxCRUD_DaftarPeserta;
    private javax.swing.JPanel boxCRUDjuri;
    private javax.swing.JPanel boxCard;
    private javax.swing.JPanel boxFieldJuri;
    private javax.swing.JPanel boxField_AspekPenilaian;
    private javax.swing.JPanel boxField_DaftarLomba;
    private javax.swing.JPanel boxField_DaftarPeserta;
    private javax.swing.JPanel boxPaneltabel;
    private javax.swing.JPanel boxPaneltabel10;
    private javax.swing.JPanel boxPaneltabel6;
    private javax.swing.JPanel boxPaneltabel7;
    private javax.swing.JPanel boxPaneltabel8;
    private javax.swing.JPanel boxPaneltabel9;
    private javax.swing.JPanel boxPerkembanganpeserta;
    private javax.swing.JPanel boxPerkembanganpeserta10;
    private javax.swing.JPanel boxPerkembanganpeserta6;
    private javax.swing.JPanel boxPerkembanganpeserta7;
    private javax.swing.JPanel boxPerkembanganpeserta8;
    private javax.swing.JPanel boxPerkembanganpeserta9;
    private javax.swing.JPanel boxRefresh;
    private javax.swing.JPanel boxRefresh_AspekPenilaian;
    private javax.swing.JPanel boxRefresh_DaftarLomba;
    private javax.swing.JPanel boxRefresh_DaftarPeserta;
    private javax.swing.JPanel boxTabel;
    private javax.swing.JPanel boxTabel_AspekPenilaian;
    private javax.swing.JPanel boxTabel_DaftarLomba;
    private javax.swing.JPanel box_AspekPenilaian;
    private javax.swing.JButton btnAddAspek;
    private javax.swing.JButton btnAddLomba;
    private javax.swing.JButton btnAddPeserta;
    private javax.swing.JButton btnDeleteAspek;
    private javax.swing.JButton btnEditAspek;
    private javax.swing.JButton btnEditLomba;
    private javax.swing.JButton btnEditPeserta;
    private javax.swing.JButton btnEksporPDF;
    private javax.swing.JButton btnHapusLomba;
    private javax.swing.JButton btnHapusPeserta;
    private javax.swing.JButton btnImportPeserta;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefreshAspek;
    private javax.swing.JButton btnRefreshLomba;
    private javax.swing.JButton btnRefreshPeserta;
    private javax.swing.JButton btnRefreshRekapNilai;
    private javax.swing.JPanel cardTotalJuri;
    private javax.swing.JPanel cardTotalLomba;
    private javax.swing.JPanel cardTotalPeserta;
    private javax.swing.JComboBox<String> comboboxLombaAspek;
    private javax.swing.JComboBox<String> comboboxLombaPeserta;
    private javax.swing.JPanel daftarJuara;
    private javax.swing.JPanel daftarJuri;
    private javax.swing.JPanel daftarLomba;
    private javax.swing.JPanel daftarPeserta;
    private javax.swing.JButton delJuri;
    private javax.swing.JButton editJuri;
    private javax.swing.JButton eksporPDFJuara;
    private javax.swing.JTextField fieldAsalPeserta;
    private javax.swing.JTextField fieldCariPeserta;
    private javax.swing.JTextField fieldCariRekap;
    private javax.swing.JTextField fieldNama;
    private javax.swing.JTextField fieldNamaPeserta;
    private javax.swing.JPasswordField fieldPassword;
    private javax.swing.JTextField fieldUsername;
    private javax.swing.JPanel headerNavbar;
    private javax.swing.JPanel headerNavbar1;
    private javax.swing.JPanel headerNavbar10;
    private javax.swing.JPanel headerNavbar6;
    private javax.swing.JPanel headerNavbar7;
    private javax.swing.JPanel headerNavbar8;
    private javax.swing.JPanel headerNavbar9;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel headerTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPanePanitia;
    private javax.swing.JPanel kontenPanel;
    private javax.swing.JTextField kuotaField;
    private javax.swing.JLabel kuotaLabel;
    private javax.swing.JLabel labelAsalPeserta;
    private javax.swing.JLabel labelAspek;
    private javax.swing.JLabel labelCariPeserta;
    private javax.swing.JLabel labelLombaPeserta;
    private javax.swing.JLabel labelNamaPeserta;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JPanel leftBoxtabeljuri;
    private javax.swing.JPanel leftPanelside;
    private javax.swing.JPanel logoutPanel;
    private javax.swing.JLabel logoutTxt;
    private javax.swing.JLabel lombaLabelAspek;
    private javax.swing.JPanel menuNavbar;
    private javax.swing.JTextField namaAspekfield;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JTextField namaLombaField;
    private javax.swing.JLabel namaLombalabelLomba;
    private javax.swing.JPanel navbarBox;
    private javax.swing.JPanel panelBoxRekap;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField presentaseField;
    private javax.swing.JLabel presentaseLabel;
    private javax.swing.JPanel refreshBox;
    private javax.swing.JButton refreshBtnStatistik;
    private javax.swing.JPanel rekapNilai;
    private javax.swing.JPanel rightPanelAspek;
    private javax.swing.JPanel rightPanelJuara;
    private javax.swing.JPanel rightPanelJuri;
    private javax.swing.JPanel rightPanelLomba;
    private javax.swing.JPanel rightPanelPeserta;
    private javax.swing.JPanel rightPanelRekap;
    private javax.swing.JPanel rightpanelStatistik;
    private javax.swing.JScrollPane scrollTabeljuri;
    private javax.swing.JPanel statistikPeserta;
    private javax.swing.JTable tabelAspek;
    private javax.swing.JTable tabelJuara;
    private javax.swing.JTable tabelJuri;
    private javax.swing.JTable tabelLomba;
    private javax.swing.JTable tabelPeserta;
    private javax.swing.JTable tabelRekapNilai;
    private javax.swing.JTable tabelStatistikLomba;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel totalJuritxt;
    private javax.swing.JLabel totalLombatxt;
    private javax.swing.JLabel totalPesertatxt;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
